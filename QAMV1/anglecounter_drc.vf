////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : anglecounter_drc.vf
// /___/   /\     Timestamp : 11/29/2015 00:46:34
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.2\ISE_DS\ISE\bin\nt\unwrapped\sch2hdl.exe -intstyle ise -family spartan3 -verilog anglecounter_drc.vf -w G:/FPGA/BTP/QAMV1/anglecounter.sch
//Design Name: anglecounter
//Device: spartan3
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module gnd16bit_MUSER_anglecounter(x_constant);

   output [15:0] x_constant;
   
   wire XLXN_36;
   wire XLXN_48;
   wire XLXN_53;
   wire XLXN_67;
   
   GND  XLXI_1 (.G(XLXN_67));
   BUF  XLXI_2 (.I(XLXN_36), 
               .O(x_constant[0]));
   BUF  XLXI_3 (.I(XLXN_36), 
               .O(x_constant[1]));
   BUF  XLXI_4 (.I(XLXN_36), 
               .O(x_constant[2]));
   GND  XLXI_5 (.G(XLXN_36));
   BUF  XLXI_7 (.I(XLXN_36), 
               .O(x_constant[3]));
   GND  XLXI_8 (.G(XLXN_48));
   BUF  XLXI_9 (.I(XLXN_48), 
               .O(x_constant[4]));
   GND  XLXI_11 (.G(XLXN_53));
   BUF  XLXI_24 (.I(XLXN_48), 
                .O(x_constant[5]));
   BUF  XLXI_25 (.I(XLXN_48), 
                .O(x_constant[6]));
   BUF  XLXI_26 (.I(XLXN_53), 
                .O(x_constant[7]));
   BUF  XLXI_27 (.I(XLXN_53), 
                .O(x_constant[8]));
   BUF  XLXI_28 (.I(XLXN_53), 
                .O(x_constant[9]));
   BUF  XLXI_29 (.I(XLXN_67), 
                .O(x_constant[10]));
   BUF  XLXI_30 (.I(XLXN_67), 
                .O(x_constant[11]));
   BUF  XLXI_31 (.I(XLXN_67), 
                .O(x_constant[12]));
   BUF  XLXI_32 (.I(XLXN_67), 
                .O(x_constant[13]));
   BUF  XLXI_33 (.I(XLXN_67), 
                .O(x_constant[14]));
   BUF  XLXI_34 (.I(XLXN_67), 
                .O(x_constant[15]));
endmodule
`timescale 1ns / 1ps

module FD16CE_MXILINX_anglecounter(C, 
                                   CE, 
                                   CLR, 
                                   D, 
                                   Q);

    input C;
    input CE;
    input CLR;
    input [15:0] D;
   output [15:0] Q;
   
   
   FDCE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[0]), 
              .Q(Q[0]));
   FDCE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[1]), 
              .Q(Q[1]));
   FDCE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[2]), 
              .Q(Q[2]));
   FDCE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[3]), 
              .Q(Q[3]));
   FDCE #( .INIT(1'b0) ) I_Q4 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[4]), 
              .Q(Q[4]));
   FDCE #( .INIT(1'b0) ) I_Q5 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[5]), 
              .Q(Q[5]));
   FDCE #( .INIT(1'b0) ) I_Q6 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[6]), 
              .Q(Q[6]));
   FDCE #( .INIT(1'b0) ) I_Q7 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[7]), 
              .Q(Q[7]));
   FDCE #( .INIT(1'b0) ) I_Q8 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[8]), 
              .Q(Q[8]));
   FDCE #( .INIT(1'b0) ) I_Q9 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[9]), 
              .Q(Q[9]));
   FDCE #( .INIT(1'b0) ) I_Q10 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[10]), 
               .Q(Q[10]));
   FDCE #( .INIT(1'b0) ) I_Q11 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[11]), 
               .Q(Q[11]));
   FDCE #( .INIT(1'b0) ) I_Q12 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[12]), 
               .Q(Q[12]));
   FDCE #( .INIT(1'b0) ) I_Q13 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[13]), 
               .Q(Q[13]));
   FDCE #( .INIT(1'b0) ) I_Q14 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[14]), 
               .Q(Q[14]));
   FDCE #( .INIT(1'b0) ) I_Q15 (.C(C), 
               .CE(CE), 
               .CLR(CLR), 
               .D(D[15]), 
               .Q(Q[15]));
endmodule
`timescale 1ns / 1ps

module ADD16_MXILINX_anglecounter(A, 
                                  B, 
                                  CI, 
                                  CO, 
                                  OFL, 
                                  S);

    input [15:0] A;
    input [15:0] B;
    input CI;
   output CO;
   output OFL;
   output [15:0] S;
   
   wire C0;
   wire C1;
   wire C2;
   wire C3;
   wire C4;
   wire C5;
   wire C6;
   wire C7;
   wire C8;
   wire C9;
   wire C10;
   wire C11;
   wire C12;
   wire C13;
   wire C14;
   wire C14O;
   wire dummy;
   wire I0;
   wire I1;
   wire I2;
   wire I3;
   wire I4;
   wire I5;
   wire I6;
   wire I7;
   wire I8;
   wire I9;
   wire I10;
   wire I11;
   wire I12;
   wire I13;
   wire I14;
   wire I15;
   wire CO_DUMMY;
   
   assign CO = CO_DUMMY;
   (* RLOC = "X0Y4" *) 
   FMAP  I_36_16 (.I1(A[8]), 
                 .I2(B[8]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I8));
   (* RLOC = "X0Y4" *) 
   FMAP  I_36_17 (.I1(A[9]), 
                 .I2(B[9]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I9));
   (* RLOC = "X0Y5" *) 
   FMAP  I_36_18 (.I1(A[10]), 
                 .I2(B[10]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I10));
   (* RLOC = "X0Y5" *) 
   FMAP  I_36_19 (.I1(A[11]), 
                 .I2(B[11]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I11));
   (* RLOC = "X0Y6" *) 
   FMAP  I_36_20 (.I1(A[12]), 
                 .I2(B[12]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I12));
   (* RLOC = "X0Y6" *) 
   FMAP  I_36_21 (.I1(A[13]), 
                 .I2(B[13]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I13));
   (* RLOC = "X0Y7" *) 
   FMAP  I_36_22 (.I1(A[14]), 
                 .I2(B[14]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I14));
   (* RLOC = "X0Y7" *) 
   FMAP  I_36_23 (.I1(A[15]), 
                 .I2(B[15]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I15));
   (* RLOC = "X0Y4" *) 
   MUXCY_L  I_36_55 (.CI(C8), 
                    .DI(A[9]), 
                    .S(I9), 
                    .LO(C9));
   (* RLOC = "X0Y5" *) 
   MUXCY_L  I_36_58 (.CI(C10), 
                    .DI(A[11]), 
                    .S(I11), 
                    .LO(C11));
   (* RLOC = "X0Y5" *) 
   MUXCY_L  I_36_62 (.CI(C9), 
                    .DI(A[10]), 
                    .S(I10), 
                    .LO(C10));
   (* RLOC = "X0Y6" *) 
   MUXCY_L  I_36_63 (.CI(C11), 
                    .DI(A[12]), 
                    .S(I12), 
                    .LO(C12));
   (* RLOC = "X0Y7" *) 
   MUXCY  I_36_64 (.CI(C14), 
                  .DI(A[15]), 
                  .S(I15), 
                  .O(CO_DUMMY));
   XORCY  I_36_73 (.CI(C7), 
                  .LI(I8), 
                  .O(S[8]));
   XORCY  I_36_74 (.CI(C8), 
                  .LI(I9), 
                  .O(S[9]));
   XORCY  I_36_75 (.CI(C10), 
                  .LI(I11), 
                  .O(S[11]));
   XORCY  I_36_76 (.CI(C9), 
                  .LI(I10), 
                  .O(S[10]));
   XORCY  I_36_77 (.CI(C12), 
                  .LI(I13), 
                  .O(S[13]));
   XORCY  I_36_78 (.CI(C11), 
                  .LI(I12), 
                  .O(S[12]));
   XORCY  I_36_80 (.CI(C14), 
                  .LI(I15), 
                  .O(S[15]));
   XORCY  I_36_81 (.CI(C13), 
                  .LI(I14), 
                  .O(S[14]));
   (* RLOC = "X0Y7" *) 
   MUXCY_D  I_36_107 (.CI(C13), 
                     .DI(A[14]), 
                     .S(I14), 
                     .LO(C14), 
                     .O(C14O));
   (* RLOC = "X0Y6" *) 
   MUXCY_L  I_36_110 (.CI(C12), 
                     .DI(A[13]), 
                     .S(I13), 
                     .LO(C13));
   (* RLOC = "X0Y4" *) 
   MUXCY_L  I_36_111 (.CI(C7), 
                     .DI(A[8]), 
                     .S(I8), 
                     .LO(C8));
   XORCY  I_36_226 (.CI(CI), 
                   .LI(I0), 
                   .O(S[0]));
   XORCY  I_36_227 (.CI(C0), 
                   .LI(I1), 
                   .O(S[1]));
   XORCY  I_36_228 (.CI(C2), 
                   .LI(I3), 
                   .O(S[3]));
   XORCY  I_36_229 (.CI(C1), 
                   .LI(I2), 
                   .O(S[2]));
   XORCY  I_36_230 (.CI(C4), 
                   .LI(I5), 
                   .O(S[5]));
   XORCY  I_36_231 (.CI(C3), 
                   .LI(I4), 
                   .O(S[4]));
   XORCY  I_36_233 (.CI(C6), 
                   .LI(I7), 
                   .O(S[7]));
   XORCY  I_36_234 (.CI(C5), 
                   .LI(I6), 
                   .O(S[6]));
   (* RLOC = "X0Y3" *) 
   MUXCY_L  I_36_248 (.CI(C6), 
                     .DI(A[7]), 
                     .S(I7), 
                     .LO(C7));
   (* RLOC = "X0Y3" *) 
   MUXCY_L  I_36_249 (.CI(C5), 
                     .DI(A[6]), 
                     .S(I6), 
                     .LO(C6));
   (* RLOC = "X0Y2" *) 
   MUXCY_L  I_36_250 (.CI(C4), 
                     .DI(A[5]), 
                     .S(I5), 
                     .LO(C5));
   (* RLOC = "X0Y2" *) 
   MUXCY_L  I_36_251 (.CI(C3), 
                     .DI(A[4]), 
                     .S(I4), 
                     .LO(C4));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_252 (.CI(C2), 
                     .DI(A[3]), 
                     .S(I3), 
                     .LO(C3));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_253 (.CI(C1), 
                     .DI(A[2]), 
                     .S(I2), 
                     .LO(C2));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_254 (.CI(C0), 
                     .DI(A[1]), 
                     .S(I1), 
                     .LO(C1));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_255 (.CI(CI), 
                     .DI(A[0]), 
                     .S(I0), 
                     .LO(C0));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_272 (.I1(A[1]), 
                  .I2(B[1]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I1));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_275 (.I1(A[0]), 
                  .I2(B[0]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I0));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_279 (.I1(A[2]), 
                  .I2(B[2]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I2));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_283 (.I1(A[3]), 
                  .I2(B[3]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I3));
   (* RLOC = "X0Y2" *) 
   FMAP  I_36_287 (.I1(A[4]), 
                  .I2(B[4]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I4));
   (* RLOC = "X0Y2" *) 
   FMAP  I_36_291 (.I1(A[5]), 
                  .I2(B[5]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I5));
   (* RLOC = "X0Y3" *) 
   FMAP  I_36_295 (.I1(A[6]), 
                  .I2(B[6]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I6));
   (* RLOC = "X0Y3" *) 
   FMAP  I_36_299 (.I1(A[7]), 
                  .I2(B[7]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I7));
   XOR2  I_36_354 (.I0(A[0]), 
                  .I1(B[0]), 
                  .O(I0));
   XOR2  I_36_355 (.I0(A[1]), 
                  .I1(B[1]), 
                  .O(I1));
   XOR2  I_36_356 (.I0(A[2]), 
                  .I1(B[2]), 
                  .O(I2));
   XOR2  I_36_357 (.I0(A[3]), 
                  .I1(B[3]), 
                  .O(I3));
   XOR2  I_36_358 (.I0(A[4]), 
                  .I1(B[4]), 
                  .O(I4));
   XOR2  I_36_359 (.I0(A[5]), 
                  .I1(B[5]), 
                  .O(I5));
   XOR2  I_36_360 (.I0(A[6]), 
                  .I1(B[6]), 
                  .O(I6));
   XOR2  I_36_361 (.I0(A[7]), 
                  .I1(B[7]), 
                  .O(I7));
   XOR2  I_36_362 (.I0(A[8]), 
                  .I1(B[8]), 
                  .O(I8));
   XOR2  I_36_363 (.I0(A[9]), 
                  .I1(B[9]), 
                  .O(I9));
   XOR2  I_36_364 (.I0(A[10]), 
                  .I1(B[10]), 
                  .O(I10));
   XOR2  I_36_365 (.I0(A[11]), 
                  .I1(B[11]), 
                  .O(I11));
   XOR2  I_36_366 (.I0(A[12]), 
                  .I1(B[12]), 
                  .O(I12));
   XOR2  I_36_367 (.I0(A[13]), 
                  .I1(B[13]), 
                  .O(I13));
   XOR2  I_36_368 (.I0(A[14]), 
                  .I1(B[14]), 
                  .O(I14));
   XOR2  I_36_369 (.I0(A[15]), 
                  .I1(B[15]), 
                  .O(I15));
   XOR2  I_36_375 (.I0(C14O), 
                  .I1(CO_DUMMY), 
                  .O(OFL));
endmodule
`timescale 1ns / 1ps

module NOR16_MXILINX_anglecounter(I0, 
                                  I1, 
                                  I2, 
                                  I3, 
                                  I4, 
                                  I5, 
                                  I6, 
                                  I7, 
                                  I8, 
                                  I9, 
                                  I10, 
                                  I11, 
                                  I12, 
                                  I13, 
                                  I14, 
                                  I15, 
                                  O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
    input I8;
    input I9;
    input I10;
    input I11;
    input I12;
    input I13;
    input I14;
    input I15;
   output O;
   
   wire CIN;
   wire C0;
   wire C1;
   wire C2;
   wire S0;
   wire S1;
   wire S2;
   wire S3;
   wire XLXN_46;
   
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_2 (.CI(CIN), 
                   .DI(XLXN_46), 
                   .S(S0), 
                   .LO(C0));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_29 (.I1(I0), 
                 .I2(I1), 
                 .I3(I2), 
                 .I4(I3), 
                 .O(S0));
   VCC  I_36_107 (.P(CIN));
   GND  I_36_109 (.G(XLXN_46));
   NOR4  I_36_110 (.I0(I0), 
                  .I1(I1), 
                  .I2(I2), 
                  .I3(I3), 
                  .O(S0));
   NOR4  I_36_127 (.I0(I4), 
                  .I1(I5), 
                  .I2(I6), 
                  .I3(I7), 
                  .O(S1));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_129 (.CI(C0), 
                     .DI(XLXN_46), 
                     .S(S1), 
                     .LO(C1));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_138 (.I1(I4), 
                  .I2(I5), 
                  .I3(I6), 
                  .I4(I7), 
                  .O(S1));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_142 (.I1(I8), 
                  .I2(I9), 
                  .I3(I10), 
                  .I4(I11), 
                  .O(S2));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_147 (.CI(C1), 
                     .DI(XLXN_46), 
                     .S(S2), 
                     .LO(C2));
   NOR4  I_36_151 (.I0(I8), 
                  .I1(I9), 
                  .I2(I10), 
                  .I3(I11), 
                  .O(S2));
   NOR4  I_36_161 (.I0(I12), 
                  .I1(I13), 
                  .I2(I14), 
                  .I3(I15), 
                  .O(S3));
   (* RLOC = "X0Y1" *) 
   MUXCY  I_36_165 (.CI(C2), 
                   .DI(XLXN_46), 
                   .S(S3), 
                   .O(O));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_170 (.I1(I12), 
                  .I2(I13), 
                  .I3(I14), 
                  .I4(I15), 
                  .O(S3));
endmodule
`timescale 1ns / 1ps

module FTCE_MXILINX_anglecounter(C, 
                                 CE, 
                                 CLR, 
                                 T, 
                                 Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDCE  I_36_35 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ), 
                 .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module CB16CE_MXILINX_anglecounter(C, 
                                   CE, 
                                   CLR, 
                                   CEO, 
                                   Q, 
                                   TC);

    input C;
    input CE;
    input CLR;
   output CEO;
   output [15:0] Q;
   output TC;
   
   wire T2;
   wire T3;
   wire T4;
   wire T5;
   wire T6;
   wire T7;
   wire T8;
   wire T9;
   wire T10;
   wire T11;
   wire T12;
   wire T13;
   wire T14;
   wire T15;
   wire XLXN_1;
   wire [15:0] Q_DUMMY;
   wire TC_DUMMY;
   
   assign Q[15:0] = Q_DUMMY[15:0];
   assign TC = TC_DUMMY;
   (* HU_SET = "I_Q0_1" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q0 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(XLXN_1), 
                                   .Q(Q_DUMMY[0]));
   (* HU_SET = "I_Q1_0" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q1 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(Q_DUMMY[0]), 
                                   .Q(Q_DUMMY[1]));
   (* HU_SET = "I_Q2_3" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q2 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(T2), 
                                   .Q(Q_DUMMY[2]));
   (* HU_SET = "I_Q3_2" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q3 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(T3), 
                                   .Q(Q_DUMMY[3]));
   (* HU_SET = "I_Q4_7" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q4 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(T4), 
                                   .Q(Q_DUMMY[4]));
   (* HU_SET = "I_Q5_6" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q5 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(T5), 
                                   .Q(Q_DUMMY[5]));
   (* HU_SET = "I_Q6_5" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q6 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(T6), 
                                   .Q(Q_DUMMY[6]));
   (* HU_SET = "I_Q7_4" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q7 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(T7), 
                                   .Q(Q_DUMMY[7]));
   (* HU_SET = "I_Q8_8" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q8 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(T8), 
                                   .Q(Q_DUMMY[8]));
   (* HU_SET = "I_Q9_9" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q9 (.C(C), 
                                   .CE(CE), 
                                   .CLR(CLR), 
                                   .T(T9), 
                                   .Q(Q_DUMMY[9]));
   (* HU_SET = "I_Q10_10" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q10 (.C(C), 
                                    .CE(CE), 
                                    .CLR(CLR), 
                                    .T(T10), 
                                    .Q(Q_DUMMY[10]));
   (* HU_SET = "I_Q11_11" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q11 (.C(C), 
                                    .CE(CE), 
                                    .CLR(CLR), 
                                    .T(T11), 
                                    .Q(Q_DUMMY[11]));
   (* HU_SET = "I_Q12_12" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q12 (.C(C), 
                                    .CE(CE), 
                                    .CLR(CLR), 
                                    .T(T12), 
                                    .Q(Q_DUMMY[12]));
   (* HU_SET = "I_Q13_13" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q13 (.C(C), 
                                    .CE(CE), 
                                    .CLR(CLR), 
                                    .T(T13), 
                                    .Q(Q_DUMMY[13]));
   (* HU_SET = "I_Q14_14" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q14 (.C(C), 
                                    .CE(CE), 
                                    .CLR(CLR), 
                                    .T(T14), 
                                    .Q(Q_DUMMY[14]));
   (* HU_SET = "I_Q15_15" *) 
   FTCE_MXILINX_anglecounter #( .INIT(1'b0) ) I_Q15 (.C(C), 
                                    .CE(CE), 
                                    .CLR(CLR), 
                                    .T(T15), 
                                    .Q(Q_DUMMY[15]));
   AND3  I_36_3 (.I0(Q_DUMMY[2]), 
                .I1(Q_DUMMY[1]), 
                .I2(Q_DUMMY[0]), 
                .O(T3));
   AND2  I_36_4 (.I0(Q_DUMMY[1]), 
                .I1(Q_DUMMY[0]), 
                .O(T2));
   VCC  I_36_9 (.P(XLXN_1));
   AND4  I_36_10 (.I0(Q_DUMMY[3]), 
                 .I1(Q_DUMMY[2]), 
                 .I2(Q_DUMMY[1]), 
                 .I3(Q_DUMMY[0]), 
                 .O(T4));
   AND5  I_36_14 (.I0(Q_DUMMY[7]), 
                 .I1(Q_DUMMY[6]), 
                 .I2(Q_DUMMY[5]), 
                 .I3(Q_DUMMY[4]), 
                 .I4(T4), 
                 .O(T8));
   AND2  I_36_15 (.I0(Q_DUMMY[4]), 
                 .I1(T4), 
                 .O(T5));
   AND3  I_36_19 (.I0(Q_DUMMY[5]), 
                 .I1(Q_DUMMY[4]), 
                 .I2(T4), 
                 .O(T6));
   AND4  I_36_21 (.I0(Q_DUMMY[6]), 
                 .I1(Q_DUMMY[5]), 
                 .I2(Q_DUMMY[4]), 
                 .I3(T4), 
                 .O(T7));
   AND5  I_36_22 (.I0(Q_DUMMY[15]), 
                 .I1(Q_DUMMY[14]), 
                 .I2(Q_DUMMY[13]), 
                 .I3(Q_DUMMY[12]), 
                 .I4(T12), 
                 .O(TC_DUMMY));
   AND2  I_36_23 (.I0(Q_DUMMY[12]), 
                 .I1(T12), 
                 .O(T13));
   AND3  I_36_24 (.I0(Q_DUMMY[13]), 
                 .I1(Q_DUMMY[12]), 
                 .I2(T12), 
                 .O(T14));
   AND4  I_36_25 (.I0(Q_DUMMY[14]), 
                 .I1(Q_DUMMY[13]), 
                 .I2(Q_DUMMY[12]), 
                 .I3(T12), 
                 .O(T15));
   AND4  I_36_26 (.I0(Q_DUMMY[10]), 
                 .I1(Q_DUMMY[9]), 
                 .I2(Q_DUMMY[8]), 
                 .I3(T8), 
                 .O(T11));
   AND3  I_36_27 (.I0(Q_DUMMY[9]), 
                 .I1(Q_DUMMY[8]), 
                 .I2(T8), 
                 .O(T10));
   AND2  I_36_28 (.I0(Q_DUMMY[8]), 
                 .I1(T8), 
                 .O(T9));
   AND5  I_36_29 (.I0(Q_DUMMY[11]), 
                 .I1(Q_DUMMY[10]), 
                 .I2(Q_DUMMY[9]), 
                 .I3(Q_DUMMY[8]), 
                 .I4(T8), 
                 .O(T12));
   AND2  I_36_54 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module Counter_12_MUSER_anglecounter(CLK, 
                                     CLR, 
                                     C10, 
                                     C11);

    input CLK;
   output CLR;
   output C10;
   output C11;
   
   wire [15:0] XLXN_2;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_28;
   wire XLXN_29;
   
   (* HU_SET = "XLXI_1_16" *) 
   CB16CE_MXILINX_anglecounter  XLXI_1 (.C(CLK), 
                                       .CE(), 
                                       .CLR(), 
                                       .CEO(), 
                                       .Q(XLXN_2[15:0]), 
                                       .TC());
   (* HU_SET = "XLXI_2_17" *) 
   NOR16_MXILINX_anglecounter  XLXI_2 (.I0(XLXN_23), 
                                      .I1(XLXN_24), 
                                      .I2(XLXN_25), 
                                      .I3(XLXN_26), 
                                      .I4(XLXN_28), 
                                      .I5(XLXN_29), 
                                      .I6(XLXN_2[9]), 
                                      .I7(XLXN_2[8]), 
                                      .I8(XLXN_2[7]), 
                                      .I9(XLXN_2[6]), 
                                      .I10(XLXN_2[5]), 
                                      .I11(XLXN_2[4]), 
                                      .I12(XLXN_2[3]), 
                                      .I13(XLXN_2[2]), 
                                      .I14(XLXN_2[1]), 
                                      .I15(XLXN_2[0]), 
                                      .O(CLR));
   GND  XLXI_3 (.G(XLXN_23));
   GND  XLXI_4 (.G(XLXN_24));
   GND  XLXI_5 (.G(XLXN_25));
   GND  XLXI_6 (.G(XLXN_26));
   BUF  XLXI_7 (.I(XLXN_28), 
               .O(C11));
   BUF  XLXI_9 (.I(XLXN_29), 
               .O(C10));
endmodule
`timescale 1ns / 1ps

module anglecounter(OTP, 
                    Quad_Change);

   output [11:0] OTP;
   output Quad_Change;
   
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire [15:0] XLXN_37;
   wire XLXN_38;
   wire [15:0] XLXN_39;
   wire [15:0] XLXN_40;
   wire [15:0] XLXN_42;
   wire [15:0] XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire [15:0] XLXN_47;
   
   Counter_12_MUSER_anglecounter  XLXI_10 (.CLK(XLXN_36), 
                                          .CLR(XLXN_38), 
                                          .C10(XLXN_34), 
                                          .C11(XLXN_35));
   XOR2  XLXI_11 (.I0(XLXN_34), 
                 .I1(XLXN_35), 
                 .O(Quad_Change));
   (* HU_SET = "XLXI_13_18" *) 
   ADD16_MXILINX_anglecounter  XLXI_13 (.A(XLXN_40[15:0]), 
                                       .B(XLXN_39[15:0]), 
                                       .CI(XLXN_45), 
                                       .CO(XLXN_44), 
                                       .OFL(), 
                                       .S(XLXN_37[15:0]));
   (* HU_SET = "XLXI_14_19" *) 
   FD16CE_MXILINX_anglecounter  XLXI_14 (.C(XLXN_36), 
                                        .CE(), 
                                        .CLR(XLXN_38), 
                                        .D(XLXN_37[15:0]), 
                                        .Q(XLXN_39[15:0]));
   (* HU_SET = "XLXI_15_20" *) 
   ADD16_MXILINX_anglecounter  XLXI_15 (.A(XLXN_43[15:0]), 
                                       .B(XLXN_47[15:0]), 
                                       .CI(XLXN_44), 
                                       .CO(), 
                                       .OFL(), 
                                       .S(XLXN_42[15:0]));
   (* HU_SET = "XLXI_16_21" *) 
   FD16CE_MXILINX_anglecounter  XLXI_16 (.C(XLXN_36), 
                                        .CE(), 
                                        .CLR(), 
                                        .D(XLXN_42[15:0]), 
                                        .Q(XLXN_43[15:0]));
   GND  XLXI_17 (.G(XLXN_45));
   gnd16bit_MUSER_anglecounter  XLXI_24 (.x_constant(XLXN_47[15:0]));
   GND  XLXI_25 (.G(XLXN_40[7]));
   GND  XLXI_26 (.G(XLXN_40[2]));
   GND  XLXI_27 (.G(XLXN_40[3]));
   GND  XLXI_28 (.G(XLXN_40[5]));
   GND  XLXI_29 (.G(XLXN_40[6]));
   GND  XLXI_30 (.G(XLXN_40[9]));
   GND  XLXI_31 (.G(XLXN_40[10]));
   GND  XLXI_32 (.G(XLXN_40[11]));
   GND  XLXI_33 (.G(XLXN_40[12]));
   GND  XLXI_34 (.G(XLXN_40[13]));
   GND  XLXI_35 (.G(XLXN_40[14]));
   GND  XLXI_36 (.G(XLXN_40[15]));
   VCC  XLXI_37 (.P(XLXN_40[8]));
   VCC  XLXI_38 (.P(XLXN_40[1]));
   VCC  XLXI_39 (.P(XLXN_40[4]));
   VCC  XLXI_40 (.P(XLXN_40[0]));
   BUF  XLXI_43 (.I(XLXN_39[8]), 
                .O(OTP[0]));
   BUF  XLXI_44 (.I(XLXN_39[9]), 
                .O(OTP[1]));
   BUF  XLXI_45 (.I(XLXN_39[10]), 
                .O(OTP[2]));
   BUF  XLXI_46 (.I(XLXN_39[11]), 
                .O(OTP[3]));
   BUF  XLXI_47 (.I(XLXN_39[12]), 
                .O(OTP[4]));
   BUF  XLXI_48 (.I(XLXN_39[13]), 
                .O(OTP[5]));
   BUF  XLXI_49 (.I(XLXN_39[14]), 
                .O(OTP[6]));
   BUF  XLXI_50 (.I(XLXN_39[15]), 
                .O(OTP[7]));
   BUF  XLXI_51 (.I(XLXN_43[0]), 
                .O(OTP[8]));
   BUF  XLXI_52 (.I(XLXN_43[1]), 
                .O(OTP[9]));
   BUF  XLXI_53 (.I(XLXN_43[2]), 
                .O(OTP[10]));
   BUF  XLXI_54 (.I(XLXN_43[3]), 
                .O(OTP[11]));
endmodule
