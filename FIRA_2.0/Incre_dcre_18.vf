////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : Incre_dcre_18.vf
// /___/   /\     Timestamp : 05/30/2015 19:32:01
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog E:/FPGA_Xilinx/FIRA_2.0/Incre_dcre_18.vf -w E:/FPGA_Xilinx/ETC_WITH_LEDs/Incre_dcre_18.sch
//Design Name: Incre_dcre_18
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Incre_dcre_18(add_0, 
                     In_16, 
                     OUT_16);

    input add_0;
    input [17:0] In_16;
   output [17:0] OUT_16;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_50;
   wire XLXN_52;
   wire XLXN_120;
   wire XLXN_121;
   wire XLXN_122;
   wire XLXN_123;
   wire XLXN_126;
   wire XLXN_127;
   wire XLXN_129;
   wire XLXN_130;
   wire XLXN_131;
   wire XLXN_133;
   wire XLXN_134;
   wire XLXN_135;
   wire XLXN_136;
   wire XLXN_137;
   wire XLXN_140;
   wire XLXN_971;
   wire XLXN_976;
   wire XLXN_982;
   wire XLXN_989;
   wire XLXN_1009;
   wire XLXN_1013;
   wire XLXN_1015;
   wire XLXN_1016;
   wire XLXN_1018;
   wire XLXN_1019;
   wire XLXN_1025;
   wire XLXN_1026;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(In_16[3]), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(In_16[2]), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(In_16[1]), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_14));
   XOR2  XLXI_5 (.I0(add_0), 
                .I1(In_16[5]), 
                .O(XLXN_1));
   XOR2  XLXI_6 (.I0(add_0), 
                .I1(In_16[6]), 
                .O(XLXN_13));
   XOR2  XLXI_7 (.I0(add_0), 
                .I1(In_16[7]), 
                .O(XLXN_5));
   XOR2  XLXI_8 (.I0(add_0), 
                .I1(In_16[4]), 
                .O(XLXN_12));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(In_16[0]), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_15));
   XOR2  XLXI_11 (.I0(XLXN_5), 
                 .I1(XLXN_24), 
                 .O(XLXN_19));
   XOR2  XLXI_12 (.I0(XLXN_13), 
                 .I1(XLXN_6), 
                 .O(XLXN_20));
   XOR2  XLXI_13 (.I0(XLXN_1), 
                 .I1(XLXN_7), 
                 .O(XLXN_21));
   XOR2  XLXI_14 (.I0(XLXN_12), 
                 .I1(XLXN_8), 
                 .O(XLXN_18));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_11), 
                 .O(XLXN_17));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_10), 
                 .O(XLXN_16));
   AND2  XLXI_17 (.I0(XLXN_13), 
                 .I1(XLXN_6), 
                 .O(XLXN_24));
   AND2  XLXI_18 (.I0(XLXN_1), 
                 .I1(XLXN_7), 
                 .O(XLXN_6));
   AND2  XLXI_19 (.I0(XLXN_12), 
                 .I1(XLXN_8), 
                 .O(XLXN_7));
   AND2  XLXI_20 (.I0(XLXN_2), 
                 .I1(XLXN_11), 
                 .O(XLXN_8));
   AND2  XLXI_21 (.I0(XLXN_3), 
                 .I1(XLXN_10), 
                 .O(XLXN_11));
   AND2  XLXI_22 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_10));
   XOR2  XLXI_23 (.I0(add_0), 
                 .I1(XLXN_20), 
                 .O(OUT_16[6]));
   XOR2  XLXI_24 (.I0(add_0), 
                 .I1(XLXN_18), 
                 .O(OUT_16[4]));
   XOR2  XLXI_25 (.I0(add_0), 
                 .I1(XLXN_17), 
                 .O(OUT_16[3]));
   XOR2  XLXI_26 (.I0(add_0), 
                 .I1(XLXN_16), 
                 .O(OUT_16[2]));
   XOR2  XLXI_27 (.I0(add_0), 
                 .I1(XLXN_15), 
                 .O(OUT_16[1]));
   XOR2  XLXI_28 (.I0(add_0), 
                 .I1(XLXN_14), 
                 .O(OUT_16[0]));
   XOR2  XLXI_29 (.I0(add_0), 
                 .I1(XLXN_21), 
                 .O(OUT_16[5]));
   XOR2  XLXI_30 (.I0(XLXN_23), 
                 .I1(XLXN_50), 
                 .O(XLXN_22));
   AND2  XLXI_31 (.I0(XLXN_5), 
                 .I1(XLXN_24), 
                 .O(XLXN_50));
   XOR2  XLXI_32 (.I0(add_0), 
                 .I1(In_16[8]), 
                 .O(XLXN_23));
   XOR2  XLXI_43 (.I0(add_0), 
                 .I1(XLXN_19), 
                 .O(OUT_16[7]));
   XOR2  XLXI_46 (.I0(add_0), 
                 .I1(XLXN_22), 
                 .O(OUT_16[8]));
   XOR2  XLXI_85 (.I0(add_0), 
                 .I1(In_16[12]), 
                 .O(XLXN_121));
   XOR2  XLXI_86 (.I0(add_0), 
                 .I1(In_16[11]), 
                 .O(XLXN_122));
   XOR2  XLXI_87 (.I0(add_0), 
                 .I1(In_16[10]), 
                 .O(XLXN_123));
   XOR2  XLXI_89 (.I0(add_0), 
                 .I1(In_16[14]), 
                 .O(XLXN_120));
   XOR2  XLXI_90 (.I0(add_0), 
                 .I1(In_16[15]), 
                 .O(XLXN_1009));
   XOR2  XLXI_92 (.I0(add_0), 
                 .I1(In_16[13]), 
                 .O(XLXN_131));
   XOR2  XLXI_93 (.I0(add_0), 
                 .I1(In_16[9]), 
                 .O(XLXN_976));
   XOR2  XLXI_94 (.I0(XLXN_123), 
                 .I1(XLXN_982), 
                 .O(XLXN_134));
   XOR2  XLXI_96 (.I0(XLXN_1009), 
                 .I1(XLXN_1018), 
                 .O(XLXN_971));
   XOR2  XLXI_97 (.I0(XLXN_120), 
                 .I1(XLXN_126), 
                 .O(XLXN_140));
   XOR2  XLXI_98 (.I0(XLXN_131), 
                 .I1(XLXN_127), 
                 .O(XLXN_137));
   XOR2  XLXI_99 (.I0(XLXN_121), 
                 .I1(XLXN_130), 
                 .O(XLXN_136));
   XOR2  XLXI_100 (.I0(XLXN_122), 
                  .I1(XLXN_129), 
                  .O(XLXN_135));
   AND2  XLXI_102 (.I0(XLXN_120), 
                  .I1(XLXN_126), 
                  .O(XLXN_1018));
   AND2  XLXI_103 (.I0(XLXN_131), 
                  .I1(XLXN_127), 
                  .O(XLXN_126));
   AND2  XLXI_104 (.I0(XLXN_121), 
                  .I1(XLXN_130), 
                  .O(XLXN_127));
   AND2  XLXI_105 (.I0(XLXN_122), 
                  .I1(XLXN_129), 
                  .O(XLXN_130));
   AND2  XLXI_106 (.I0(XLXN_123), 
                  .I1(XLXN_982), 
                  .O(XLXN_129));
   XOR2  XLXI_108 (.I0(add_0), 
                  .I1(XLXN_971), 
                  .O(OUT_16[15]));
   XOR2  XLXI_109 (.I0(add_0), 
                  .I1(XLXN_137), 
                  .O(OUT_16[13]));
   XOR2  XLXI_110 (.I0(add_0), 
                  .I1(XLXN_136), 
                  .O(OUT_16[12]));
   XOR2  XLXI_111 (.I0(add_0), 
                  .I1(XLXN_135), 
                  .O(OUT_16[11]));
   XOR2  XLXI_112 (.I0(add_0), 
                  .I1(XLXN_134), 
                  .O(OUT_16[10]));
   XOR2  XLXI_113 (.I0(add_0), 
                  .I1(XLXN_133), 
                  .O(OUT_16[9]));
   XOR2  XLXI_114 (.I0(add_0), 
                  .I1(XLXN_140), 
                  .O(OUT_16[14]));
   XOR2  XLXI_527 (.I0(XLXN_976), 
                  .I1(XLXN_989), 
                  .O(XLXN_133));
   AND2  XLXI_528 (.I0(XLXN_23), 
                  .I1(XLXN_50), 
                  .O(XLXN_989));
   AND2  XLXI_529 (.I0(XLXN_976), 
                  .I1(XLXN_989), 
                  .O(XLXN_982));
   XOR2  XLXI_530 (.I0(add_0), 
                  .I1(In_16[16]), 
                  .O(XLXN_1015));
   XOR2  XLXI_531 (.I0(add_0), 
                  .I1(In_16[17]), 
                  .O(XLXN_1016));
   AND2  XLXI_532 (.I0(XLXN_1009), 
                  .I1(XLXN_1018), 
                  .O(XLXN_1019));
   AND2  XLXI_533 (.I0(XLXN_1015), 
                  .I1(XLXN_1019), 
                  .O(XLXN_1013));
   XOR2  XLXI_534 (.I0(XLXN_1015), 
                  .I1(XLXN_1019), 
                  .O(XLXN_1026));
   XOR2  XLXI_535 (.I0(XLXN_1016), 
                  .I1(XLXN_1013), 
                  .O(XLXN_1025));
   XOR2  XLXI_536 (.I0(add_0), 
                  .I1(XLXN_1026), 
                  .O(OUT_16[16]));
   XOR2  XLXI_537 (.I0(add_0), 
                  .I1(XLXN_1025), 
                  .O(OUT_16[17]));
endmodule
