////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : ETC_PWM_USART.vf
// /___/   /\     Timestamp : 09/25/2016 21:44:16
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog E:/FPGA_Xilinx/Complete_Fira_1.0_working_22_08_2015/ETC_PWM_USART.vf -w E:/FPGA_Xilinx/Complete_Fira_1.0_working_22_08_2015/ETC_PWM_USART.sch
//Design Name: ETC_PWM_USART
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FD9CE_MUSER_ETC_PWM_USART(C, 
                                 CE, 
                                 CLR, 
                                 D, 
                                 Q);

    input C;
    input CE;
    input CLR;
    input [8:0] D;
   output [8:0] Q;
   
   
   FDCE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[0]), 
              .Q(Q[0]));
   FDCE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[1]), 
              .Q(Q[1]));
   FDCE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[2]), 
              .Q(Q[2]));
   FDCE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[3]), 
              .Q(Q[3]));
   FDCE #( .INIT(1'b0) ) I_Q4 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[4]), 
              .Q(Q[4]));
   FDCE #( .INIT(1'b0) ) I_Q5 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[5]), 
              .Q(Q[5]));
   FDCE #( .INIT(1'b0) ) I_Q6 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[6]), 
              .Q(Q[6]));
   FDCE #( .INIT(1'b0) ) I_Q7 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[7]), 
              .Q(Q[7]));
   FDCE #( .INIT(1'b0) ) XLXI_9 (.C(C), 
                .CE(CE), 
                .CLR(CLR), 
                .D(D[8]), 
                .Q(Q[8]));
endmodule
`timescale 1ns / 1ps

module Incrementer_Decrementer_MUSER_ETC_PWM_USART(add_0, 
                                                   I_0, 
                                                   I_1, 
                                                   I_2, 
                                                   I_3, 
                                                   I_4, 
                                                   I_5, 
                                                   I_6, 
                                                   I_7, 
                                                   I_8, 
                                                   O_0, 
                                                   O_1, 
                                                   O_2, 
                                                   O_3, 
                                                   O_4, 
                                                   O_5, 
                                                   O_6, 
                                                   O_7, 
                                                   O_8);

    input add_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input I_8;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   output O_8;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_52;
   wire XLXN_55;
   wire XLXN_57;
   wire XLXN_59;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(I_3), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(I_2), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(I_1), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_63));
   XOR2  XLXI_5 (.I0(add_0), 
                .I1(I_5), 
                .O(XLXN_1));
   XOR2  XLXI_6 (.I0(add_0), 
                .I1(I_6), 
                .O(XLXN_62));
   XOR2  XLXI_7 (.I0(add_0), 
                .I1(I_7), 
                .O(XLXN_5));
   XOR2  XLXI_8 (.I0(add_0), 
                .I1(I_4), 
                .O(XLXN_59));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(I_0), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_64));
   XOR2  XLXI_11 (.I0(XLXN_5), 
                 .I1(XLXN_75), 
                 .O(XLXN_68));
   XOR2  XLXI_12 (.I0(XLXN_62), 
                 .I1(XLXN_46), 
                 .O(XLXN_69));
   XOR2  XLXI_13 (.I0(XLXN_1), 
                 .I1(XLXN_47), 
                 .O(XLXN_70));
   XOR2  XLXI_14 (.I0(XLXN_59), 
                 .I1(XLXN_48), 
                 .O(XLXN_67));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_66));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_65));
   AND2  XLXI_17 (.I0(XLXN_62), 
                 .I1(XLXN_46), 
                 .O(XLXN_75));
   AND2  XLXI_18 (.I0(XLXN_1), 
                 .I1(XLXN_47), 
                 .O(XLXN_46));
   AND2  XLXI_19 (.I0(XLXN_59), 
                 .I1(XLXN_48), 
                 .O(XLXN_47));
   AND2  XLXI_20 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_48));
   AND2  XLXI_21 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_57));
   AND2  XLXI_35 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_55));
   XOR2  XLXI_38 (.I0(add_0), 
                 .I1(XLXN_63), 
                 .O(O_0));
   XOR2  XLXI_39 (.I0(add_0), 
                 .I1(XLXN_64), 
                 .O(O_1));
   XOR2  XLXI_40 (.I0(add_0), 
                 .I1(XLXN_65), 
                 .O(O_2));
   XOR2  XLXI_41 (.I0(add_0), 
                 .I1(XLXN_66), 
                 .O(O_3));
   XOR2  XLXI_42 (.I0(add_0), 
                 .I1(XLXN_67), 
                 .O(O_4));
   XOR2  XLXI_43 (.I0(add_0), 
                 .I1(XLXN_68), 
                 .O(O_7));
   XOR2  XLXI_44 (.I0(add_0), 
                 .I1(XLXN_69), 
                 .O(O_6));
   XOR2  XLXI_45 (.I0(add_0), 
                 .I1(XLXN_70), 
                 .O(O_5));
   XOR2  XLXI_46 (.I0(add_0), 
                 .I1(XLXN_71), 
                 .O(O_8));
   XOR2  XLXI_48 (.I0(XLXN_74), 
                 .I1(XLXN_73), 
                 .O(XLXN_71));
   AND2  XLXI_49 (.I0(XLXN_5), 
                 .I1(XLXN_75), 
                 .O(XLXN_73));
   XOR2  XLXI_50 (.I0(add_0), 
                 .I1(I_8), 
                 .O(XLXN_74));
endmodule
`timescale 1ns / 1ps

module Flip_flip9_MUSER_ETC_PWM_USART(CE, 
                                      C_0, 
                                      I_0, 
                                      I_1, 
                                      I_2, 
                                      I_3, 
                                      I_4, 
                                      I_5, 
                                      I_6, 
                                      I_7, 
                                      I_8, 
                                      RST, 
                                      O_0, 
                                      O_1, 
                                      O_2, 
                                      O_3, 
                                      O_4, 
                                      O_5, 
                                      O_6, 
                                      O_7, 
                                      O_8);

    input CE;
    input C_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input I_8;
    input RST;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   output O_8;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_5), 
                 .Q(O_5));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_4), 
                 .Q(O_4));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_15 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_16 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_17 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_0), 
                 .Q(O_0));
   FDCE #( .INIT(1'b0) ) XLXI_18 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_8), 
                 .Q(O_8));
   FDCE #( .INIT(1'b0) ) XLXI_19 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_7), 
                 .Q(O_7));
   FDCE #( .INIT(1'b0) ) XLXI_20 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_6), 
                 .Q(O_6));
endmodule
`timescale 1ns / 1ps

module Couter_9CE_MUSER_ETC_PWM_USART(CE, 
                                      CLK, 
                                      DIR, 
                                      RST, 
                                      TICK);

    input CE;
    input CLK;
    input DIR;
    input RST;
   output [8:0] TICK;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_5;
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_16;
   wire [8:0] TICK_DUMMY;
   
   assign TICK[8:0] = TICK_DUMMY[8:0];
   Flip_flip9_MUSER_ETC_PWM_USART  XLXI_3 (.CE(CE), 
                                          .C_0(CLK), 
                                          .I_0(XLXN_3), 
                                          .I_1(XLXN_5), 
                                          .I_2(XLXN_7), 
                                          .I_3(XLXN_9), 
                                          .I_4(XLXN_11), 
                                          .I_5(XLXN_12), 
                                          .I_6(XLXN_16), 
                                          .I_7(XLXN_13), 
                                          .I_8(XLXN_1), 
                                          .RST(RST), 
                                          .O_0(TICK_DUMMY[0]), 
                                          .O_1(TICK_DUMMY[1]), 
                                          .O_2(TICK_DUMMY[2]), 
                                          .O_3(TICK_DUMMY[3]), 
                                          .O_4(TICK_DUMMY[4]), 
                                          .O_5(TICK_DUMMY[5]), 
                                          .O_6(TICK_DUMMY[6]), 
                                          .O_7(TICK_DUMMY[7]), 
                                          .O_8(TICK_DUMMY[8]));
   Incrementer_Decrementer_MUSER_ETC_PWM_USART  XLXI_4 (.add_0(DIR), 
                                                       .I_0(TICK_DUMMY[0]), 
                                                       .I_1(TICK_DUMMY[1]), 
                                                       .I_2(TICK_DUMMY[2]), 
                                                       .I_3(TICK_DUMMY[3]), 
                                                       .I_4(TICK_DUMMY[4]), 
                                                       .I_5(TICK_DUMMY[5]), 
                                                       .I_6(TICK_DUMMY[6]), 
                                                       .I_7(TICK_DUMMY[7]), 
                                                       .I_8(TICK_DUMMY[8]), 
                                                       .O_0(XLXN_3), 
                                                       .O_1(XLXN_5), 
                                                       .O_2(XLXN_7), 
                                                       .O_3(XLXN_9), 
                                                       .O_4(XLXN_11), 
                                                       .O_5(XLXN_12), 
                                                       .O_6(XLXN_16), 
                                                       .O_7(XLXN_13), 
                                                       .O_8(XLXN_1));
endmodule
`timescale 1ns / 1ps

module ETC_SYNCRONOUS_MUSER_ETC_PWM_USART(CLK, 
                                          E_1, 
                                          E_2, 
                                          RST_1, 
                                          TInt, 
                                          TICKS);

    input CLK;
    input E_1;
    input E_2;
    input RST_1;
    input TInt;
   output [8:0] TICKS;
   
   wire XLXN_7;
   wire XLXN_15;
   wire XLXN_26;
   wire XLXN_111;
   wire XLXN_112;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_118;
   wire XLXN_119;
   wire XLXN_122;
   wire XLXN_141;
   wire [8:0] XLXN_146;
   wire XLXN_149;
   wire XLXN_150;
   
   FDR #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
               .D(E_1), 
               .R(XLXN_15), 
               .Q(XLXN_7));
   GND  XLXI_5 (.G(XLXN_15));
   Couter_9CE_MUSER_ETC_PWM_USART  XLXI_8 (.CE(XLXN_150), 
                                          .CLK(CLK), 
                                          .DIR(E_2), 
                                          .RST(XLXN_122), 
                                          .TICK(XLXN_146[8:0]));
   AND2  XLXI_10 (.I0(E_1), 
                 .I1(XLXN_26), 
                 .O(XLXN_150));
   INV  XLXI_11 (.I(XLXN_7), 
                .O(XLXN_26));
   FDR #( .INIT(1'b0) ) XLXI_37 (.C(CLK), 
                .D(XLXN_111), 
                .R(XLXN_114), 
                .Q(XLXN_118));
   FDR #( .INIT(1'b0) ) XLXI_38 (.C(CLK), 
                .D(XLXN_141), 
                .R(XLXN_113), 
                .Q(XLXN_111));
   FDR #( .INIT(1'b0) ) XLXI_39 (.C(CLK), 
                .D(TInt), 
                .R(XLXN_112), 
                .Q(XLXN_141));
   GND  XLXI_40 (.G(XLXN_113));
   GND  XLXI_41 (.G(XLXN_112));
   GND  XLXI_42 (.G(XLXN_114));
   AND2  XLXI_43 (.I0(XLXN_119), 
                 .I1(XLXN_111), 
                 .O(XLXN_122));
   INV  XLXI_45 (.I(XLXN_118), 
                .O(XLXN_119));
   FD9CE_MUSER_ETC_PWM_USART  XLXI_48 (.C(TInt), 
                                      .CE(XLXN_149), 
                                      .CLR(RST_1), 
                                      .D(XLXN_146[8:0]), 
                                      .Q(TICKS[8:0]));
   VCC  XLXI_53 (.P(XLXN_149));
endmodule
`timescale 1ns / 1ps

module FJKC_MXILINX_ETC_PWM_USART(C, 
                                  CLR, 
                                  J, 
                                  K, 
                                  Q);

   parameter INIT = 1'b0;
   
    input C;
    input CLR;
    input J;
    input K;
   output Q;
   
   wire AD;
   wire A0;
   wire A1;
   wire A2;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   (* RLOC = "X0Y0" *) 
   FDC  I_36_32 (.C(C), 
                .CLR(CLR), 
                .D(AD), 
                .Q(Q_DUMMY));
   AND3B2  I_36_37 (.I0(J), 
                   .I1(K), 
                   .I2(Q_DUMMY), 
                   .O(A0));
   AND3B1  I_36_40 (.I0(Q_DUMMY), 
                   .I1(K), 
                   .I2(J), 
                   .O(A1));
   OR3  I_36_41 (.I0(A2), 
                .I1(A1), 
                .I2(A0), 
                .O(AD));
   AND2B1  I_36_43 (.I0(K), 
                   .I1(J), 
                   .O(A2));
endmodule
`timescale 1ns / 1ps

module Digital_Filter_MUSER_ETC_PWM_USART(CLK, 
                                          Inp, 
                                          Outp);

    input CLK;
    input Inp;
   output Outp;
   
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   
   FD #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
              .D(Inp), 
              .Q(XLXN_18));
   FD #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
              .D(XLXN_18), 
              .Q(XLXN_17));
   FD #( .INIT(1'b0) ) XLXI_3 (.C(CLK), 
              .D(XLXN_17), 
              .Q(XLXN_16));
   FD #( .INIT(1'b0) ) XLXI_4 (.C(CLK), 
              .D(XLXN_16), 
              .Q(XLXN_15));
   INV  XLXI_5 (.I(XLXN_18), 
               .O(XLXN_14));
   INV  XLXI_6 (.I(XLXN_17), 
               .O(XLXN_13));
   INV  XLXI_7 (.I(XLXN_16), 
               .O(XLXN_12));
   INV  XLXI_8 (.I(XLXN_15), 
               .O(XLXN_11));
   AND4  XLXI_9 (.I0(XLXN_15), 
                .I1(XLXN_16), 
                .I2(XLXN_17), 
                .I3(XLXN_18), 
                .O(XLXN_26));
   AND4  XLXI_10 (.I0(XLXN_14), 
                 .I1(XLXN_13), 
                 .I2(XLXN_12), 
                 .I3(XLXN_11), 
                 .O(XLXN_27));
   (* HU_SET = "XLXI_11_17" *) 
   FJKC_MXILINX_ETC_PWM_USART #( .INIT(1'b0) ) XLXI_11 (.C(CLK), 
                                       .CLR(XLXN_28), 
                                       .J(XLXN_26), 
                                       .K(XLXN_27), 
                                       .Q(Outp));
   GND  XLXI_12 (.G(XLXN_28));
endmodule
`timescale 1ns / 1ps

module Main_Module_MUSER_ETC_PWM_USART(CLK, 
                                       CLK_TInt, 
                                       E_1, 
                                       E_2, 
                                       RST_1, 
                                       Ticks);

    input CLK;
    input CLK_TInt;
    input E_1;
    input E_2;
    input RST_1;
   output [8:0] Ticks;
   
   wire XLXN_58;
   wire XLXN_59;
   
   Digital_Filter_MUSER_ETC_PWM_USART  XLXI_33 (.CLK(CLK), 
                                               .Inp(E_1), 
                                               .Outp(XLXN_59));
   Digital_Filter_MUSER_ETC_PWM_USART  XLXI_34 (.CLK(CLK), 
                                               .Inp(E_2), 
                                               .Outp(XLXN_58));
   ETC_SYNCRONOUS_MUSER_ETC_PWM_USART  XLXI_41 (.CLK(CLK), 
                                               .E_1(XLXN_59), 
                                               .E_2(XLXN_58), 
                                               .RST_1(RST_1), 
                                               .TInt(CLK_TInt), 
                                               .TICKS(Ticks[8:0]));
endmodule
`timescale 1ns / 1ps

module OCR_8_MUSER_ETC_PWM_USART(Inp0, 
                                 Sel, 
                                 Outpt);

    input [15:0] Inp0;
    input Sel;
   output [7:0] Outpt;
   
   wire XLXN_56;
   
   MUXCY  XLXI_18 (.CI(XLXN_56), 
                  .DI(Inp0[1]), 
                  .S(Sel), 
                  .O(Outpt[1]));
   MUXCY  XLXI_19 (.CI(XLXN_56), 
                  .DI(Inp0[0]), 
                  .S(Sel), 
                  .O(Outpt[0]));
   MUXCY  XLXI_20 (.CI(XLXN_56), 
                  .DI(Inp0[2]), 
                  .S(Sel), 
                  .O(Outpt[2]));
   MUXCY  XLXI_21 (.CI(XLXN_56), 
                  .DI(Inp0[3]), 
                  .S(Sel), 
                  .O(Outpt[3]));
   MUXCY  XLXI_24 (.CI(XLXN_56), 
                  .DI(Inp0[4]), 
                  .S(Sel), 
                  .O(Outpt[4]));
   MUXCY  XLXI_25 (.CI(XLXN_56), 
                  .DI(Inp0[5]), 
                  .S(Sel), 
                  .O(Outpt[5]));
   MUXCY  XLXI_26 (.CI(XLXN_56), 
                  .DI(Inp0[6]), 
                  .S(Sel), 
                  .O(Outpt[6]));
   MUXCY  XLXI_27 (.CI(XLXN_56), 
                  .DI(Inp0[7]), 
                  .S(Sel), 
                  .O(Outpt[7]));
   VCC  XLXI_67 (.P(XLXN_56));
endmodule
`timescale 1ns / 1ps

module Mux_2_16_MUSER_ETC_PWM_USART(Inp0, 
                                    Inp1, 
                                    S_0, 
                                    Output);

    input [15:0] Inp0;
    input [15:0] Inp1;
    input S_0;
   output [15:0] Output;
   
   
   MUXCY  XLXI_1 (.CI(Inp1[3]), 
                 .DI(Inp0[3]), 
                 .S(S_0), 
                 .O(Output[3]));
   MUXCY  XLXI_9 (.CI(Inp1[0]), 
                 .DI(Inp0[0]), 
                 .S(S_0), 
                 .O(Output[0]));
   MUXCY  XLXI_18 (.CI(Inp1[1]), 
                  .DI(Inp0[1]), 
                  .S(S_0), 
                  .O(Output[1]));
   MUXCY  XLXI_24 (.CI(Inp1[4]), 
                  .DI(Inp0[4]), 
                  .S(S_0), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[5]), 
                  .DI(Inp0[5]), 
                  .S(S_0), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[6]), 
                  .DI(Inp0[6]), 
                  .S(S_0), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[7]), 
                  .DI(Inp0[7]), 
                  .S(S_0), 
                  .O(Output[7]));
   MUXCY  XLXI_28 (.CI(Inp1[8]), 
                  .DI(Inp0[8]), 
                  .S(S_0), 
                  .O(Output[8]));
   MUXCY  XLXI_31 (.CI(Inp1[9]), 
                  .DI(Inp0[9]), 
                  .S(S_0), 
                  .O(Output[9]));
   MUXCY  XLXI_35 (.CI(Inp1[10]), 
                  .DI(Inp0[10]), 
                  .S(S_0), 
                  .O(Output[10]));
   MUXCY  XLXI_37 (.CI(Inp1[11]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[11]));
   MUXCY  XLXI_47 (.CI(Inp1[12]), 
                  .DI(Inp0[12]), 
                  .S(S_0), 
                  .O(Output[12]));
   MUXCY  XLXI_48 (.CI(Inp1[13]), 
                  .DI(Inp0[13]), 
                  .S(S_0), 
                  .O(Output[13]));
   MUXCY  XLXI_49 (.CI(Inp1[14]), 
                  .DI(Inp0[14]), 
                  .S(S_0), 
                  .O(Output[14]));
   MUXCY  XLXI_53 (.CI(Inp1[2]), 
                  .DI(Inp0[2]), 
                  .S(S_0), 
                  .O(Output[2]));
   MUXCY  XLXI_57 (.CI(Inp1[15]), 
                  .DI(Inp0[15]), 
                  .S(S_0), 
                  .O(Output[15]));
endmodule
`timescale 1ns / 1ps

module Mux_2_8_MUSER_ETC_PWM_USART(Inp0, 
                                   Inp1, 
                                   Sel, 
                                   Output);

    input [7:0] Inp0;
    input [7:0] Inp1;
    input Sel;
   output [7:0] Output;
   
   
   MUXCY  XLXI_18 (.CI(Inp1[1]), 
                  .DI(Inp0[1]), 
                  .S(Sel), 
                  .O(Output[1]));
   MUXCY  XLXI_19 (.CI(Inp1[0]), 
                  .DI(Inp0[0]), 
                  .S(Sel), 
                  .O(Output[0]));
   MUXCY  XLXI_20 (.CI(Inp1[2]), 
                  .DI(Inp0[2]), 
                  .S(Sel), 
                  .O(Output[2]));
   MUXCY  XLXI_21 (.CI(Inp1[3]), 
                  .DI(Inp0[3]), 
                  .S(Sel), 
                  .O(Output[3]));
   MUXCY  XLXI_24 (.CI(Inp1[4]), 
                  .DI(Inp0[4]), 
                  .S(Sel), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[5]), 
                  .DI(Inp0[5]), 
                  .S(Sel), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[6]), 
                  .DI(Inp0[6]), 
                  .S(Sel), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[7]), 
                  .DI(Inp0[7]), 
                  .S(Sel), 
                  .O(Output[7]));
endmodule
`timescale 1ns / 1ps

module INV16_MXILINX_ETC_PWM_USART(I, 
                                   O);

    input [15:0] I;
   output [15:0] O;
   
   
   INV  I_36_30 (.I(I[8]), 
                .O(O[8]));
   INV  I_36_31 (.I(I[9]), 
                .O(O[9]));
   INV  I_36_32 (.I(I[10]), 
                .O(O[10]));
   INV  I_36_33 (.I(I[11]), 
                .O(O[11]));
   INV  I_36_34 (.I(I[15]), 
                .O(O[15]));
   INV  I_36_35 (.I(I[14]), 
                .O(O[14]));
   INV  I_36_36 (.I(I[13]), 
                .O(O[13]));
   INV  I_36_37 (.I(I[12]), 
                .O(O[12]));
   INV  I_36_38 (.I(I[4]), 
                .O(O[4]));
   INV  I_36_39 (.I(I[5]), 
                .O(O[5]));
   INV  I_36_40 (.I(I[6]), 
                .O(O[6]));
   INV  I_36_41 (.I(I[7]), 
                .O(O[7]));
   INV  I_36_42 (.I(I[3]), 
                .O(O[3]));
   INV  I_36_43 (.I(I[2]), 
                .O(O[2]));
   INV  I_36_44 (.I(I[1]), 
                .O(O[1]));
   INV  I_36_45 (.I(I[0]), 
                .O(O[0]));
endmodule
`timescale 1ns / 1ps

module Twos_Comp_MUSER_ETC_PWM_USART(InPut, 
                                     Twos_Comp);

    input [15:0] InPut;
   output [15:0] Twos_Comp;
   
   wire [15:0] XLXN_1;
   wire XLXN_2;
   
   (* HU_SET = "XLXI_1_18" *) 
   INV16_MXILINX_ETC_PWM_USART  XLXI_1 (.I(InPut[15:0]), 
                                       .O(XLXN_1[15:0]));
   Incrementer_Decrementer_16  XLXI_2 (.add_0(XLXN_2), 
                                      .In_16(XLXN_1[15:0]), 
                                      .OUT_16(Twos_Comp[15:0]));
   GND  XLXI_3 (.G(XLXN_2));
endmodule
`timescale 1ns / 1ps

module FD16RE_MXILINX_ETC_PWM_USART(C, 
                                    CE, 
                                    D, 
                                    R, 
                                    Q);

    input C;
    input CE;
    input [15:0] D;
    input R;
   output [15:0] Q;
   
   
   FDRE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .D(D[0]), 
              .R(R), 
              .Q(Q[0]));
   FDRE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .D(D[1]), 
              .R(R), 
              .Q(Q[1]));
   FDRE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .D(D[2]), 
              .R(R), 
              .Q(Q[2]));
   FDRE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .D(D[3]), 
              .R(R), 
              .Q(Q[3]));
   FDRE #( .INIT(1'b0) ) I_Q4 (.C(C), 
              .CE(CE), 
              .D(D[4]), 
              .R(R), 
              .Q(Q[4]));
   FDRE #( .INIT(1'b0) ) I_Q5 (.C(C), 
              .CE(CE), 
              .D(D[5]), 
              .R(R), 
              .Q(Q[5]));
   FDRE #( .INIT(1'b0) ) I_Q6 (.C(C), 
              .CE(CE), 
              .D(D[6]), 
              .R(R), 
              .Q(Q[6]));
   FDRE #( .INIT(1'b0) ) I_Q7 (.C(C), 
              .CE(CE), 
              .D(D[7]), 
              .R(R), 
              .Q(Q[7]));
   FDRE #( .INIT(1'b0) ) I_Q8 (.C(C), 
              .CE(CE), 
              .D(D[8]), 
              .R(R), 
              .Q(Q[8]));
   FDRE #( .INIT(1'b0) ) I_Q9 (.C(C), 
              .CE(CE), 
              .D(D[9]), 
              .R(R), 
              .Q(Q[9]));
   FDRE #( .INIT(1'b0) ) I_Q10 (.C(C), 
               .CE(CE), 
               .D(D[10]), 
               .R(R), 
               .Q(Q[10]));
   FDRE #( .INIT(1'b0) ) I_Q11 (.C(C), 
               .CE(CE), 
               .D(D[11]), 
               .R(R), 
               .Q(Q[11]));
   FDRE #( .INIT(1'b0) ) I_Q12 (.C(C), 
               .CE(CE), 
               .D(D[12]), 
               .R(R), 
               .Q(Q[12]));
   FDRE #( .INIT(1'b0) ) I_Q13 (.C(C), 
               .CE(CE), 
               .D(D[13]), 
               .R(R), 
               .Q(Q[13]));
   FDRE #( .INIT(1'b0) ) I_Q14 (.C(C), 
               .CE(CE), 
               .D(D[14]), 
               .R(R), 
               .Q(Q[14]));
   FDRE #( .INIT(1'b0) ) I_Q15 (.C(C), 
               .CE(CE), 
               .D(D[15]), 
               .R(R), 
               .Q(Q[15]));
endmodule
`timescale 1ns / 1ps

module ADD16_MXILINX_ETC_PWM_USART(A, 
                                   B, 
                                   CI, 
                                   CO, 
                                   OFL, 
                                   S);

    input [15:0] A;
    input [15:0] B;
    input CI;
   output CO;
   output OFL;
   output [15:0] S;
   
   wire C0;
   wire C1;
   wire C2;
   wire C3;
   wire C4;
   wire C5;
   wire C6;
   wire C7;
   wire C8;
   wire C9;
   wire C10;
   wire C11;
   wire C12;
   wire C13;
   wire C14;
   wire C14O;
   wire dummy;
   wire I0;
   wire I1;
   wire I2;
   wire I3;
   wire I4;
   wire I5;
   wire I6;
   wire I7;
   wire I8;
   wire I9;
   wire I10;
   wire I11;
   wire I12;
   wire I13;
   wire I14;
   wire I15;
   wire CO_DUMMY;
   
   assign CO = CO_DUMMY;
   (* RLOC = "X0Y4" *) 
   FMAP  I_36_16 (.I1(A[8]), 
                 .I2(B[8]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I8));
   (* RLOC = "X0Y4" *) 
   FMAP  I_36_17 (.I1(A[9]), 
                 .I2(B[9]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I9));
   (* RLOC = "X0Y5" *) 
   FMAP  I_36_18 (.I1(A[10]), 
                 .I2(B[10]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I10));
   (* RLOC = "X0Y5" *) 
   FMAP  I_36_19 (.I1(A[11]), 
                 .I2(B[11]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I11));
   (* RLOC = "X0Y6" *) 
   FMAP  I_36_20 (.I1(A[12]), 
                 .I2(B[12]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I12));
   (* RLOC = "X0Y6" *) 
   FMAP  I_36_21 (.I1(A[13]), 
                 .I2(B[13]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I13));
   (* RLOC = "X0Y7" *) 
   FMAP  I_36_22 (.I1(A[14]), 
                 .I2(B[14]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I14));
   (* RLOC = "X0Y7" *) 
   FMAP  I_36_23 (.I1(A[15]), 
                 .I2(B[15]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I15));
   (* RLOC = "X0Y4" *) 
   MUXCY_L  I_36_55 (.CI(C8), 
                    .DI(A[9]), 
                    .S(I9), 
                    .LO(C9));
   (* RLOC = "X0Y5" *) 
   MUXCY_L  I_36_58 (.CI(C10), 
                    .DI(A[11]), 
                    .S(I11), 
                    .LO(C11));
   (* RLOC = "X0Y5" *) 
   MUXCY_L  I_36_62 (.CI(C9), 
                    .DI(A[10]), 
                    .S(I10), 
                    .LO(C10));
   (* RLOC = "X0Y6" *) 
   MUXCY_L  I_36_63 (.CI(C11), 
                    .DI(A[12]), 
                    .S(I12), 
                    .LO(C12));
   (* RLOC = "X0Y7" *) 
   MUXCY  I_36_64 (.CI(C14), 
                  .DI(A[15]), 
                  .S(I15), 
                  .O(CO_DUMMY));
   XORCY  I_36_73 (.CI(C7), 
                  .LI(I8), 
                  .O(S[8]));
   XORCY  I_36_74 (.CI(C8), 
                  .LI(I9), 
                  .O(S[9]));
   XORCY  I_36_75 (.CI(C10), 
                  .LI(I11), 
                  .O(S[11]));
   XORCY  I_36_76 (.CI(C9), 
                  .LI(I10), 
                  .O(S[10]));
   XORCY  I_36_77 (.CI(C12), 
                  .LI(I13), 
                  .O(S[13]));
   XORCY  I_36_78 (.CI(C11), 
                  .LI(I12), 
                  .O(S[12]));
   XORCY  I_36_80 (.CI(C14), 
                  .LI(I15), 
                  .O(S[15]));
   XORCY  I_36_81 (.CI(C13), 
                  .LI(I14), 
                  .O(S[14]));
   (* RLOC = "X0Y7" *) 
   MUXCY_D  I_36_107 (.CI(C13), 
                     .DI(A[14]), 
                     .S(I14), 
                     .LO(C14), 
                     .O(C14O));
   (* RLOC = "X0Y6" *) 
   MUXCY_L  I_36_110 (.CI(C12), 
                     .DI(A[13]), 
                     .S(I13), 
                     .LO(C13));
   (* RLOC = "X0Y4" *) 
   MUXCY_L  I_36_111 (.CI(C7), 
                     .DI(A[8]), 
                     .S(I8), 
                     .LO(C8));
   XORCY  I_36_226 (.CI(CI), 
                   .LI(I0), 
                   .O(S[0]));
   XORCY  I_36_227 (.CI(C0), 
                   .LI(I1), 
                   .O(S[1]));
   XORCY  I_36_228 (.CI(C2), 
                   .LI(I3), 
                   .O(S[3]));
   XORCY  I_36_229 (.CI(C1), 
                   .LI(I2), 
                   .O(S[2]));
   XORCY  I_36_230 (.CI(C4), 
                   .LI(I5), 
                   .O(S[5]));
   XORCY  I_36_231 (.CI(C3), 
                   .LI(I4), 
                   .O(S[4]));
   XORCY  I_36_233 (.CI(C6), 
                   .LI(I7), 
                   .O(S[7]));
   XORCY  I_36_234 (.CI(C5), 
                   .LI(I6), 
                   .O(S[6]));
   (* RLOC = "X0Y3" *) 
   MUXCY_L  I_36_248 (.CI(C6), 
                     .DI(A[7]), 
                     .S(I7), 
                     .LO(C7));
   (* RLOC = "X0Y3" *) 
   MUXCY_L  I_36_249 (.CI(C5), 
                     .DI(A[6]), 
                     .S(I6), 
                     .LO(C6));
   (* RLOC = "X0Y2" *) 
   MUXCY_L  I_36_250 (.CI(C4), 
                     .DI(A[5]), 
                     .S(I5), 
                     .LO(C5));
   (* RLOC = "X0Y2" *) 
   MUXCY_L  I_36_251 (.CI(C3), 
                     .DI(A[4]), 
                     .S(I4), 
                     .LO(C4));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_252 (.CI(C2), 
                     .DI(A[3]), 
                     .S(I3), 
                     .LO(C3));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_253 (.CI(C1), 
                     .DI(A[2]), 
                     .S(I2), 
                     .LO(C2));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_254 (.CI(C0), 
                     .DI(A[1]), 
                     .S(I1), 
                     .LO(C1));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_255 (.CI(CI), 
                     .DI(A[0]), 
                     .S(I0), 
                     .LO(C0));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_272 (.I1(A[1]), 
                  .I2(B[1]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I1));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_275 (.I1(A[0]), 
                  .I2(B[0]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I0));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_279 (.I1(A[2]), 
                  .I2(B[2]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I2));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_283 (.I1(A[3]), 
                  .I2(B[3]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I3));
   (* RLOC = "X0Y2" *) 
   FMAP  I_36_287 (.I1(A[4]), 
                  .I2(B[4]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I4));
   (* RLOC = "X0Y2" *) 
   FMAP  I_36_291 (.I1(A[5]), 
                  .I2(B[5]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I5));
   (* RLOC = "X0Y3" *) 
   FMAP  I_36_295 (.I1(A[6]), 
                  .I2(B[6]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I6));
   (* RLOC = "X0Y3" *) 
   FMAP  I_36_299 (.I1(A[7]), 
                  .I2(B[7]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I7));
   XOR2  I_36_354 (.I0(A[0]), 
                  .I1(B[0]), 
                  .O(I0));
   XOR2  I_36_355 (.I0(A[1]), 
                  .I1(B[1]), 
                  .O(I1));
   XOR2  I_36_356 (.I0(A[2]), 
                  .I1(B[2]), 
                  .O(I2));
   XOR2  I_36_357 (.I0(A[3]), 
                  .I1(B[3]), 
                  .O(I3));
   XOR2  I_36_358 (.I0(A[4]), 
                  .I1(B[4]), 
                  .O(I4));
   XOR2  I_36_359 (.I0(A[5]), 
                  .I1(B[5]), 
                  .O(I5));
   XOR2  I_36_360 (.I0(A[6]), 
                  .I1(B[6]), 
                  .O(I6));
   XOR2  I_36_361 (.I0(A[7]), 
                  .I1(B[7]), 
                  .O(I7));
   XOR2  I_36_362 (.I0(A[8]), 
                  .I1(B[8]), 
                  .O(I8));
   XOR2  I_36_363 (.I0(A[9]), 
                  .I1(B[9]), 
                  .O(I9));
   XOR2  I_36_364 (.I0(A[10]), 
                  .I1(B[10]), 
                  .O(I10));
   XOR2  I_36_365 (.I0(A[11]), 
                  .I1(B[11]), 
                  .O(I11));
   XOR2  I_36_366 (.I0(A[12]), 
                  .I1(B[12]), 
                  .O(I12));
   XOR2  I_36_367 (.I0(A[13]), 
                  .I1(B[13]), 
                  .O(I13));
   XOR2  I_36_368 (.I0(A[14]), 
                  .I1(B[14]), 
                  .O(I14));
   XOR2  I_36_369 (.I0(A[15]), 
                  .I1(B[15]), 
                  .O(I15));
   XOR2  I_36_375 (.I0(C14O), 
                  .I1(CO_DUMMY), 
                  .O(OFL));
endmodule
`timescale 1ns / 1ps

module OCR_Generator_MUSER_ETC_PWM_USART(C_0, 
                                         OCR_In, 
                                         Open_Loop_1, 
                                         Reset, 
                                         Target, 
                                         OCR1, 
                                         OCR2);

    input C_0;
    input [15:0] OCR_In;
    input Open_Loop_1;
    input Reset;
    input [8:0] Target;
   output [7:0] OCR1;
   output [7:0] OCR2;
   
   wire [7:0] GND;
   wire [15:0] OCR_Curr;
   wire [15:0] OCR_f;
   wire [15:0] OCR_Twos;
   wire [15:0] OCR_16;
   wire [15:0] Target_15;
   wire XLXN_2;
   wire [15:0] XLXN_3;
   wire XLXN_5;
   wire [7:0] XLXN_15;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_27;
   wire XLXN_28;
   
   (* HU_SET = "XLXI_1_19" *) 
   ADD16_MXILINX_ETC_PWM_USART  XLXI_1 (.A(XLXN_3[15:0]), 
                                       .B(OCR_In[15:0]), 
                                       .CI(XLXN_5), 
                                       .CO(), 
                                       .OFL(XLXN_16), 
                                       .S(OCR_Curr[15:0]));
   (* HU_SET = "XLXI_2_20" *) 
   FD16RE_MXILINX_ETC_PWM_USART  XLXI_2 (.C(C_0), 
                                        .CE(XLXN_2), 
                                        .D(OCR_f[15:0]), 
                                        .R(Reset), 
                                        .Q(XLXN_3[15:0]));
   VCC  XLXI_4 (.P(XLXN_2));
   GND  XLXI_5 (.G(XLXN_5));
   Twos_Comp_MUSER_ETC_PWM_USART  XLXI_8 (.InPut(OCR_f[15:0]), 
                                         .Twos_Comp(OCR_Twos[15:0]));
   Mux_2_8_MUSER_ETC_PWM_USART  XLXI_14 (.Inp0(GND[7:0]), 
                                        .Inp1(XLXN_15[7:0]), 
                                        .Sel(XLXN_20), 
                                        .Output(OCR2[7:0]));
   Mux_2_8_MUSER_ETC_PWM_USART  XLXI_15 (.Inp0(XLXN_15[7:0]), 
                                        .Inp1(GND[7:0]), 
                                        .Sel(XLXN_20), 
                                        .Output(OCR1[7:0]));
   OCR_8_MUSER_ETC_PWM_USART  XLXI_20 (.Inp0(OCR_16[15:0]), 
                                      .Sel(XLXN_19), 
                                      .Outpt(XLXN_15[7:0]));
   GND  XLXI_21 (.G(GND[0]));
   GND  XLXI_46 (.G(GND[1]));
   GND  XLXI_47 (.G(GND[2]));
   GND  XLXI_48 (.G(GND[3]));
   GND  XLXI_49 (.G(GND[4]));
   GND  XLXI_50 (.G(GND[5]));
   GND  XLXI_51 (.G(GND[6]));
   GND  XLXI_52 (.G(GND[7]));
   Mux_2_16_MUSER_ETC_PWM_USART  XLXI_54 (.Inp0(OCR_f[15:0]), 
                                         .Inp1(OCR_Twos[15:0]), 
                                         .S_0(OCR_f[15]), 
                                         .Output(OCR_16[15:0]));
   OR2  XLXI_56 (.I0(XLXN_16), 
                .I1(XLXN_18), 
                .O(XLXN_19));
   MUXCY  XLXI_58 (.CI(OCR_In[15]), 
                  .DI(OCR_f[15]), 
                  .S(XLXN_16), 
                  .O(XLXN_20));
   Mux_2_16_MUSER_ETC_PWM_USART  XLXI_67 (.Inp0(OCR_Curr[15:0]), 
                                         .Inp1(Target_15[15:0]), 
                                         .S_0(Open_Loop_1), 
                                         .Output(OCR_f[15:0]));
   BUF  XLXI_68 (.I(Target[0]), 
                .O(Target_15[0]));
   BUF  XLXI_69 (.I(Target[1]), 
                .O(Target_15[1]));
   BUF  XLXI_70 (.I(Target[2]), 
                .O(Target_15[2]));
   BUF  XLXI_71 (.I(Target[3]), 
                .O(Target_15[3]));
   BUF  XLXI_72 (.I(Target[4]), 
                .O(Target_15[4]));
   BUF  XLXI_73 (.I(Target[5]), 
                .O(Target_15[5]));
   BUF  XLXI_74 (.I(Target[6]), 
                .O(Target_15[6]));
   BUF  XLXI_75 (.I(Target[7]), 
                .O(Target_15[7]));
   BUF  XLXI_76 (.I(Target[8]), 
                .O(Target_15[8]));
   BUF  XLXI_77 (.I(Target[8]), 
                .O(Target_15[9]));
   BUF  XLXI_78 (.I(Target[8]), 
                .O(Target_15[10]));
   BUF  XLXI_79 (.I(Target[8]), 
                .O(Target_15[11]));
   BUF  XLXI_80 (.I(Target[8]), 
                .O(Target_15[12]));
   BUF  XLXI_81 (.I(Target[8]), 
                .O(Target_15[13]));
   BUF  XLXI_82 (.I(Target[8]), 
                .O(Target_15[14]));
   BUF  XLXI_103 (.I(Target[8]), 
                 .O(Target_15[15]));
   OR4  XLXI_111 (.I0(OCR_16[12]), 
                 .I1(OCR_16[13]), 
                 .I2(OCR_16[14]), 
                 .I3(OCR_16[15]), 
                 .O(XLXN_27));
   OR4  XLXI_112 (.I0(OCR_16[8]), 
                 .I1(OCR_16[9]), 
                 .I2(OCR_16[10]), 
                 .I3(OCR_16[11]), 
                 .O(XLXN_28));
   OR2  XLXI_113 (.I0(XLXN_28), 
                 .I1(XLXN_27), 
                 .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module Multiplier_8_MUSER_ETC_PWM_USART(Inp0, 
                                        Inp1, 
                                        S_0, 
                                        Output);

    input [11:0] Inp0;
    input [11:0] Inp1;
    input S_0;
   output [15:0] Output;
   
   wire S0;
   wire XLXN_1;
   wire XLXN_50;
   
   MUXCY  XLXI_18 (.CI(S0), 
                  .DI(Inp0[1]), 
                  .S(S_0), 
                  .O(Output[1]));
   MUXCY  XLXI_19 (.CI(XLXN_1), 
                  .DI(Inp0[0]), 
                  .S(S_0), 
                  .O(Output[0]));
   MUXCY  XLXI_21 (.CI(Inp1[0]), 
                  .DI(Inp0[3]), 
                  .S(S_0), 
                  .O(Output[3]));
   MUXCY  XLXI_24 (.CI(Inp1[1]), 
                  .DI(Inp0[4]), 
                  .S(S_0), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[2]), 
                  .DI(Inp0[5]), 
                  .S(S_0), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[3]), 
                  .DI(Inp0[6]), 
                  .S(S_0), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[4]), 
                  .DI(Inp0[7]), 
                  .S(S_0), 
                  .O(Output[7]));
   MUXCY  XLXI_28 (.CI(Inp1[5]), 
                  .DI(Inp0[8]), 
                  .S(S_0), 
                  .O(Output[8]));
   GND  XLXI_29 (.G(XLXN_1));
   GND  XLXI_30 (.G(S0));
   MUXCY  XLXI_31 (.CI(Inp1[6]), 
                  .DI(Inp0[9]), 
                  .S(S_0), 
                  .O(Output[9]));
   MUXCY  XLXI_35 (.CI(Inp1[7]), 
                  .DI(Inp0[10]), 
                  .S(S_0), 
                  .O(Output[10]));
   MUXCY  XLXI_37 (.CI(Inp1[8]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[11]));
   MUXCY  XLXI_47 (.CI(Inp1[9]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[12]));
   MUXCY  XLXI_48 (.CI(Inp1[10]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[13]));
   MUXCY  XLXI_49 (.CI(Inp1[11]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[14]));
   MUXCY  XLXI_53 (.CI(XLXN_50), 
                  .DI(Inp0[2]), 
                  .S(S_0), 
                  .O(Output[2]));
   GND  XLXI_54 (.G(XLXN_50));
   BUF  XLXI_60 (.I(Inp0[11]), 
                .O(Output[15]));
endmodule
`timescale 1ns / 1ps

module Multiplier_2_MUSER_ETC_PWM_USART(Inp0, 
                                        Inp1, 
                                        Sel, 
                                        Output);

    input [8:0] Inp0;
    input [8:0] Inp1;
    input Sel;
   output [9:0] Output;
   
   wire XLXN_1;
   
   MUXCY  XLXI_18 (.CI(Inp1[0]), 
                  .DI(Inp0[1]), 
                  .S(Sel), 
                  .O(Output[1]));
   MUXCY  XLXI_19 (.CI(XLXN_1), 
                  .DI(Inp0[0]), 
                  .S(Sel), 
                  .O(Output[0]));
   MUXCY  XLXI_20 (.CI(Inp1[1]), 
                  .DI(Inp0[2]), 
                  .S(Sel), 
                  .O(Output[2]));
   MUXCY  XLXI_21 (.CI(Inp1[2]), 
                  .DI(Inp0[3]), 
                  .S(Sel), 
                  .O(Output[3]));
   MUXCY  XLXI_24 (.CI(Inp1[3]), 
                  .DI(Inp0[4]), 
                  .S(Sel), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[4]), 
                  .DI(Inp0[5]), 
                  .S(Sel), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[5]), 
                  .DI(Inp0[6]), 
                  .S(Sel), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[6]), 
                  .DI(Inp0[7]), 
                  .S(Sel), 
                  .O(Output[7]));
   MUXCY  XLXI_28 (.CI(Inp1[7]), 
                  .DI(Inp0[8]), 
                  .S(Sel), 
                  .O(Output[8]));
   GND  XLXI_29 (.G(XLXN_1));
   BUF  XLXI_34 (.I(Inp1[8]), 
                .O(Output[9]));
endmodule
`timescale 1ns / 1ps

module Multiplier_4_MUSER_ETC_PWM_USART(Inp0, 
                                        Inp1, 
                                        S_0, 
                                        Output);

    input [9:0] Inp0;
    input [9:0] Inp1;
    input S_0;
   output [11:0] Output;
   
   wire XLXN_1;
   wire XLXN_30;
   
   MUXCY  XLXI_18 (.CI(XLXN_30), 
                  .DI(Inp0[1]), 
                  .S(S_0), 
                  .O(Output[1]));
   MUXCY  XLXI_19 (.CI(XLXN_1), 
                  .DI(Inp0[0]), 
                  .S(S_0), 
                  .O(Output[0]));
   MUXCY  XLXI_20 (.CI(Inp1[0]), 
                  .DI(Inp0[2]), 
                  .S(S_0), 
                  .O(Output[2]));
   MUXCY  XLXI_21 (.CI(Inp1[1]), 
                  .DI(Inp0[3]), 
                  .S(S_0), 
                  .O(Output[3]));
   MUXCY  XLXI_24 (.CI(Inp1[2]), 
                  .DI(Inp0[4]), 
                  .S(S_0), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[3]), 
                  .DI(Inp0[5]), 
                  .S(S_0), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[4]), 
                  .DI(Inp0[6]), 
                  .S(S_0), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[5]), 
                  .DI(Inp0[7]), 
                  .S(S_0), 
                  .O(Output[7]));
   MUXCY  XLXI_28 (.CI(Inp1[6]), 
                  .DI(Inp0[8]), 
                  .S(S_0), 
                  .O(Output[8]));
   GND  XLXI_29 (.G(XLXN_1));
   GND  XLXI_30 (.G(XLXN_30));
   MUXCY  XLXI_31 (.CI(Inp1[7]), 
                  .DI(Inp0[9]), 
                  .S(S_0), 
                  .O(Output[9]));
   BUF  XLXI_39 (.I(Inp1[9]), 
                .O(Output[11]));
   MUXCY  XLXI_41 (.CI(Inp1[8]), 
                  .DI(Inp1[9]), 
                  .S(S_0), 
                  .O(Output[10]));
endmodule
`timescale 1ns / 1ps

module Multiplier_MUSER_ETC_PWM_USART(InPut_9, 
                                      S_2, 
                                      S_4, 
                                      S_8, 
                                      OutPut_15);

    input [8:0] InPut_9;
    input S_2;
    input S_4;
    input S_8;
   output [15:0] OutPut_15;
   
   wire [9:0] XLXN_6;
   wire [11:0] XLXN_7;
   
   Multiplier_4_MUSER_ETC_PWM_USART  XLXI_7 (.Inp0(XLXN_6[9:0]), 
                                            .Inp1(XLXN_6[9:0]), 
                                            .S_0(S_4), 
                                            .Output(XLXN_7[11:0]));
   Multiplier_2_MUSER_ETC_PWM_USART  XLXI_8 (.Inp0(InPut_9[8:0]), 
                                            .Inp1(InPut_9[8:0]), 
                                            .Sel(S_2), 
                                            .Output(XLXN_6[9:0]));
   Multiplier_8_MUSER_ETC_PWM_USART  XLXI_9 (.Inp0(XLXN_7[11:0]), 
                                            .Inp1(XLXN_7[11:0]), 
                                            .S_0(S_8), 
                                            .Output(OutPut_15[15:0]));
endmodule
`timescale 1ns / 1ps

module sub9bit_MUSER_ETC_PWM_USART(A, 
                                   ADD, 
                                   B, 
                                   CI, 
                                   CO, 
                                   OFL, 
                                   S);

    input [8:0] A;
    input ADD;
    input [8:0] B;
    input CI;
   output CO;
   output OFL;
   output [8:0] S;
   
   wire C0;
   wire C1;
   wire C2;
   wire C3;
   wire C4;
   wire C5;
   wire C6;
   wire C6O;
   wire I0;
   wire I1;
   wire I2;
   wire I3;
   wire I4;
   wire I5;
   wire I6;
   wire I8;
   wire SUB0;
   wire SUB1;
   wire SUB2;
   wire SUB3;
   wire SUB4;
   wire SUB5;
   wire SUB6;
   wire SUB7;
   wire SUB8;
   wire XLXN_329;
   wire XLXN_346;
   wire CO_DUMMY;
   
   assign CO = CO_DUMMY;
   XOR3  I_36_50 (.I0(A[0]), 
                 .I1(B[0]), 
                 .I2(SUB0), 
                 .O(I0));
   (* RLOC = "X1Y0" *) 
   MUXCY_L  I_36_55 (.CI(C0), 
                    .DI(A[1]), 
                    .S(I1), 
                    .LO(C1));
   XOR3  I_36_56 (.I0(A[2]), 
                 .I1(B[2]), 
                 .I2(SUB2), 
                 .O(I2));
   XOR3  I_36_57 (.I0(A[3]), 
                 .I1(B[3]), 
                 .I2(SUB3), 
                 .O(I3));
   (* RLOC = "X1Y1" *) 
   MUXCY_L  I_36_58 (.CI(C2), 
                    .DI(A[3]), 
                    .S(I3), 
                    .LO(C3));
   XOR3  I_36_59 (.I0(A[6]), 
                 .I1(B[6]), 
                 .I2(SUB6), 
                 .O(I6));
   XOR3  I_36_60 (.I0(A[4]), 
                 .I1(B[4]), 
                 .I2(SUB4), 
                 .O(I4));
   (* RLOC = "X1Y1" *) 
   MUXCY_L  I_36_62 (.CI(C1), 
                    .DI(A[2]), 
                    .S(I2), 
                    .LO(C2));
 
   MUXCY_L  I_36_63 (.CI(C3), 
                    .DI(A[4]), 
                    .S(I4), 
                    .LO(C4));
   XORCY  I_36_73 (.CI(CI), 
                  .LI(I0), 
                  .O(S[0]));
   XORCY  I_36_74 (.CI(C0), 
                  .LI(I1), 
                  .O(S[1]));
   XORCY  I_36_75 (.CI(C2), 
                  .LI(I3), 
                  .O(S[3]));
   XORCY  I_36_76 (.CI(C1), 
                  .LI(I2), 
                  .O(S[2]));
   XORCY  I_36_77 (.CI(C4), 
                  .LI(I5), 
                  .O(S[5]));
   XORCY  I_36_78 (.CI(C3), 
                  .LI(I4), 
                  .O(S[4]));
   XOR3  I_36_79 (.I0(A[7]), 
                 .I1(B[7]), 
                 .I2(SUB7), 
                 .O(XLXN_329));
   XORCY  I_36_80 (.CI(C6), 
                  .LI(XLXN_329), 
                  .O(S[7]));
   XORCY  I_36_81 (.CI(C5), 
                  .LI(I6), 
                  .O(S[6]));
   XOR3  I_36_100 (.I0(A[1]), 
                  .I1(B[1]), 
                  .I2(SUB1), 
                  .O(I1));
   XOR3  I_36_109 (.I0(A[5]), 
                  .I1(B[5]), 
                  .I2(SUB5), 
                  .O(I5));

   MUXCY_L  I_36_110 (.CI(C4), 
                     .DI(A[5]), 
                     .S(I5), 
                     .LO(C5));
   (* RLOC = "X1Y0" *) 
   MUXCY_L  I_36_111 (.CI(CI), 
                     .DI(A[0]), 
                     .S(I0), 
                     .LO(C0));
   INV  I_36_112 (.I(ADD), 
                 .O(SUB0));
   XOR2  I_36_221 (.I0(C6O), 
                  .I1(CO_DUMMY), 
                  .O(OFL));
   INV  I_36_222 (.I(ADD), 
                 .O(SUB1));
   INV  I_36_223 (.I(ADD), 
                 .O(SUB2));
   INV  I_36_224 (.I(ADD), 
                 .O(SUB3));
   INV  I_36_225 (.I(ADD), 
                 .O(SUB4));
   INV  I_36_226 (.I(ADD), 
                 .O(SUB5));
   INV  I_36_227 (.I(ADD), 
                 .O(SUB6));
   INV  I_36_228 (.I(ADD), 
                 .O(SUB7));
   (* RLOC = "X1Y3" *) 
   MUXCY  XLXI_151 (.CI(XLXN_346), 
                   .DI(A[8]), 
                   .S(I8), 
                   .O(CO_DUMMY));
   XORCY  XLXI_152 (.CI(XLXN_346), 
                   .LI(I8), 
                   .O(S[8]));
   INV  XLXI_153 (.I(ADD), 
                 .O(SUB8));
   XOR3  XLXI_154 (.I0(A[8]), 
                  .I1(B[8]), 
                  .I2(SUB8), 
                  .O(I8));
   (* RLOC = "X1Y3" *) 
   MUXCY_D  XLXI_155 (.CI(C6), 
                     .DI(A[7]), 
                     .S(XLXN_329), 
                     .LO(XLXN_346), 
                     .O(C6O));

   MUXCY_L  XLXI_156 (.CI(C5), 
                     .DI(A[6]), 
                     .S(I6), 
                     .LO(C6));
endmodule
`timescale 1ns / 1ps

module D_error_MUSER_ETC_PWM_USART(clk_32, 
                                   Err, 
                                   DErr);

    input clk_32;
    input [8:0] Err;
   output [8:0] DErr;
   
   wire XLXN_25;
   
   Flip_flip9_MUSER_ETC_PWM_USART  XLXI_1 (.CE(), 
                                          .C_0(clk_32), 
                                          .I_0(Err[0]), 
                                          .I_1(Err[1]), 
                                          .I_2(Err[2]), 
                                          .I_3(Err[3]), 
                                          .I_4(Err[4]), 
                                          .I_5(Err[5]), 
                                          .I_6(Err[6]), 
                                          .I_7(Err[7]), 
                                          .I_8(Err[8]), 
                                          .RST(XLXN_25), 
                                          .O_0(DErr[0]), 
                                          .O_1(DErr[1]), 
                                          .O_2(DErr[2]), 
                                          .O_3(DErr[3]), 
                                          .O_4(DErr[4]), 
                                          .O_5(DErr[5]), 
                                          .O_6(DErr[6]), 
                                          .O_7(DErr[7]), 
                                          .O_8(DErr[8]));
   GND  XLXI_2 (.G(XLXN_25));
endmodule
`timescale 1ns / 1ps

module TotError_MUSER_ETC_PWM_USART(clk_32, 
                                    SelKd, 
                                    SelKp, 
                                    Target, 
                                    Ticks, 
                                    KdMult, 
                                    KpMult);

    input clk_32;
    input [3:0] SelKd;
    input [3:0] SelKp;
    input [8:0] Target;
    input [8:0] Ticks;
   output [15:0] KdMult;
   output [15:0] KpMult;
   
   wire [8:0] Err;
   wire [8:0] XLXN_17;
   wire [8:0] XLXN_25;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   
   D_error_MUSER_ETC_PWM_USART  XLXI_2 (.clk_32(clk_32), 
                                       .Err(Err[8:0]), 
                                       .DErr(XLXN_17[8:0]));
   sub9bit_MUSER_ETC_PWM_USART  XLXI_23 (.A(Err[8:0]), 
                                        .ADD(XLXN_28), 
                                        .B(XLXN_17[8:0]), 
                                        .CI(XLXN_29), 
                                        .CO(), 
                                        .OFL(), 
                                        .S(XLXN_25[8:0]));
   sub9bit_MUSER_ETC_PWM_USART  XLXI_29 (.A(Target[8:0]), 
                                        .ADD(XLXN_27), 
                                        .B(Ticks[8:0]), 
                                        .CI(XLXN_30), 
                                        .CO(), 
                                        .OFL(), 
                                        .S(Err[8:0]));
   Multiplier_MUSER_ETC_PWM_USART  XLXI_35 (.InPut_9(Err[8:0]), 
                                           .S_2(SelKp[0]), 
                                           .S_4(SelKp[2]), 
                                           .S_8(SelKp[1]), 
                                           .OutPut_15(KpMult[15:0]));
   Multiplier_MUSER_ETC_PWM_USART  XLXI_37 (.InPut_9(XLXN_25[8:0]), 
                                           .S_2(SelKd[0]), 
                                           .S_4(SelKd[2]), 
                                           .S_8(SelKd[1]), 
                                           .OutPut_15(KdMult[15:0]));
   GND  XLXI_38 (.G(XLXN_27));
   GND  XLXI_39 (.G(XLXN_28));
   VCC  XLXI_40 (.P(XLXN_29));
   VCC  XLXI_41 (.P(XLXN_30));
endmodule
`timescale 1ns / 1ps

module PID_Module_MUSER_ETC_PWM_USART(CLK_TInt, 
                                      Kd, 
                                      Kp, 
                                      Open_Loop_0, 
                                      Target, 
                                      Ticks, 
                                      OCR1, 
                                      OCR2);

    input CLK_TInt;
    input [3:0] Kd;
    input [3:0] Kp;
    input Open_Loop_0;
    input [8:0] Target;
    input [8:0] Ticks;
   output [7:0] OCR1;
   output [7:0] OCR2;
   
   wire [15:0] XLXN_6;
   wire [15:0] XLXN_7;
   wire XLXN_11;
   wire [15:0] XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   
   (* HU_SET = "XLXI_2_21" *) 
   ADD16_MXILINX_ETC_PWM_USART  XLXI_2 (.A(XLXN_6[15:0]), 
                                       .B(XLXN_7[15:0]), 
                                       .CI(XLXN_11), 
                                       .CO(), 
                                       .OFL(), 
                                       .S(XLXN_17[15:0]));
   GND  XLXI_3 (.G(XLXN_11));
   TotError_MUSER_ETC_PWM_USART  XLXI_5 (.clk_32(CLK_TInt), 
                                        .SelKd(Kd[3:0]), 
                                        .SelKp(Kp[3:0]), 
                                        .Target(Target[8:0]), 
                                        .Ticks(Ticks[8:0]), 
                                        .KdMult(XLXN_7[15:0]), 
                                        .KpMult(XLXN_6[15:0]));
   INV  XLXI_7 (.I(Open_Loop_0), 
               .O(XLXN_18));
   OCR_Generator_MUSER_ETC_PWM_USART  XLXI_8 (.C_0(CLK_TInt), 
                                             .OCR_In(XLXN_17[15:0]), 
                                             .Open_Loop_1(XLXN_18), 
                                             .Reset(XLXN_19), 
                                             .Target(Target[8:0]), 
                                             .OCR1(OCR1[7:0]), 
                                             .OCR2(OCR2[7:0]));
   GND  XLXI_10 (.G(XLXN_19));
endmodule
`timescale 1ns / 1ps

module FTPE_MXILINX_ETC_PWM_USART(C, 
                                  CE, 
                                  PRE, 
                                  T, 
                                  Q);

   parameter INIT = 1'b1;
   
    input C;
    input CE;
    input PRE;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDPE  I_36_35 (.C(C), 
                 .CE(CE), 
                 .D(TQ), 
                 .PRE(PRE), 
                 .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module CC8CE_MXILINX_ETC_PWM_USART(C, 
                                   CE, 
                                   CLR, 
                                   CEO, 
                                   Q, 
                                   TC);

    input C;
    input CE;
    input CLR;
   output CEO;
   output [7:0] Q;
   output TC;
   
   wire C0;
   wire C1;
   wire C2;
   wire C3;
   wire C4;
   wire C5;
   wire C6;
   wire C7;
   wire TQ0;
   wire TQ1;
   wire TQ2;
   wire TQ3;
   wire TQ4;
   wire TQ5;
   wire TQ6;
   wire TQ7;
   wire XLXN_22;
   wire XLXN_33;
   wire XLXN_41;
   wire [7:0] Q_DUMMY;
   
   assign Q[7:0] = Q_DUMMY[7:0];
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_4 (.CI(C0), 
                   .DI(XLXN_22), 
                   .S(Q_DUMMY[0]), 
                   .LO(C1));
   XORCY  I_36_6 (.CI(C0), 
                 .LI(Q_DUMMY[0]), 
                 .O(TQ0));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_26 (.CI(C1), 
                    .DI(XLXN_22), 
                    .S(Q_DUMMY[1]), 
                    .LO(C2));
   XORCY  I_36_28 (.CI(C1), 
                  .LI(Q_DUMMY[1]), 
                  .O(TQ1));
   (* RLOC = "X0Y0" *) 
   FDCE #( .INIT(1'b0) ) I_36_35 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ1), 
                 .Q(Q_DUMMY[1]));
   (* RLOC = "X0Y0" *) 
   FDCE #( .INIT(1'b0) ) I_36_36 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ0), 
                 .Q(Q_DUMMY[0]));
   (* RLOC = "X0Y1" *) 
   FDCE #( .INIT(1'b0) ) I_36_224 (.C(C), 
                  .CE(CE), 
                  .CLR(CLR), 
                  .D(TQ2), 
                  .Q(Q_DUMMY[2]));
   XORCY  I_36_226 (.CI(C2), 
                   .LI(Q_DUMMY[2]), 
                   .O(TQ2));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_233 (.CI(C2), 
                     .DI(XLXN_22), 
                     .S(Q_DUMMY[2]), 
                     .LO(C3));
   (* RLOC = "X0Y1" *) 
   FDCE #( .INIT(1'b0) ) I_36_237 (.C(C), 
                  .CE(CE), 
                  .CLR(CLR), 
                  .D(TQ3), 
                  .Q(Q_DUMMY[3]));
   XORCY  I_36_239 (.CI(C3), 
                   .LI(Q_DUMMY[3]), 
                   .O(TQ3));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_246 (.CI(C3), 
                     .DI(XLXN_22), 
                     .S(Q_DUMMY[3]), 
                     .LO(C4));
   (* RLOC = "X0Y2" *) 
   FDCE #( .INIT(1'b0) ) I_36_250 (.C(C), 
                  .CE(CE), 
                  .CLR(CLR), 
                  .D(TQ4), 
                  .Q(Q_DUMMY[4]));
   XORCY  I_36_252 (.CI(C4), 
                   .LI(Q_DUMMY[4]), 
                   .O(TQ4));
   (* RLOC = "X0Y2" *) 
   MUXCY_L  I_36_259 (.CI(C4), 
                     .DI(XLXN_22), 
                     .S(Q_DUMMY[4]), 
                     .LO(C5));
   (* RLOC = "X0Y2" *) 
   FDCE #( .INIT(1'b0) ) I_36_263 (.C(C), 
                  .CE(CE), 
                  .CLR(CLR), 
                  .D(TQ5), 
                  .Q(Q_DUMMY[5]));
   XORCY  I_36_265 (.CI(C5), 
                   .LI(Q_DUMMY[5]), 
                   .O(TQ5));
   (* RLOC = "X0Y2" *) 
   MUXCY_L  I_36_272 (.CI(C5), 
                     .DI(XLXN_22), 
                     .S(Q_DUMMY[5]), 
                     .LO(C6));
   (* RLOC = "X0Y3" *) 
   FDCE #( .INIT(1'b0) ) I_36_276 (.C(C), 
                  .CE(CE), 
                  .CLR(CLR), 
                  .D(TQ6), 
                  .Q(Q_DUMMY[6]));
   XORCY  I_36_278 (.CI(C6), 
                   .LI(Q_DUMMY[6]), 
                   .O(TQ6));
   (* RLOC = "X0Y3" *) 
   MUXCY_L  I_36_285 (.CI(C6), 
                     .DI(XLXN_22), 
                     .S(Q_DUMMY[6]), 
                     .LO(C7));
   (* RLOC = "X0Y3" *) 
   FDCE #( .INIT(1'b0) ) I_36_289 (.C(C), 
                  .CE(CE), 
                  .CLR(CLR), 
                  .D(TQ7), 
                  .Q(Q_DUMMY[7]));
   XORCY  I_36_291 (.CI(C7), 
                   .LI(Q_DUMMY[7]), 
                   .O(TQ7));
   (* RLOC = "X0Y3" *) 
   MUXCY  I_36_298 (.CI(C7), 
                   .DI(XLXN_22), 
                   .S(Q_DUMMY[7]), 
                   .O(XLXN_41));
   GND  I_36_886 (.G(XLXN_22));
   VCC  I_36_923 (.P(C0));
   AND2  XLXI_1 (.I0(XLXN_33), 
                .I1(XLXN_41), 
                .O(TC));
   AND3  XLXI_2 (.I0(XLXN_33), 
                .I1(CE), 
                .I2(XLXN_41), 
                .O(CEO));
   INV  XLXI_3 (.I(CLR), 
               .O(XLXN_33));
endmodule
`timescale 1ns / 1ps

module counter_MUSER_ETC_PWM_USART(clear, 
                                   clk, 
                                   clockenable, 
                                   Enable, 
                                   inputpwmlength, 
                                   Outputpulse);

    input clear;
    input clk;
    input clockenable;
    input Enable;
    input [7:0] inputpwmlength;
   output Outputpulse;
   
   wire [7:0] counter;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_36;
   wire XLXN_101;
   wire XLXN_106;
   wire XLXN_107;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_114;
   wire XLXN_128;
   wire XLXN_129;
   wire XLXN_143;
   wire XLXN_144;
   
   (* HU_SET = "XLXI_3_22" *) 
   CC8CE_MXILINX_ETC_PWM_USART  XLXI_3 (.C(clk), 
                                       .CE(clockenable), 
                                       .CLR(clear), 
                                       .CEO(), 
                                       .Q(counter[7:0]), 
                                       .TC());
   XOR2  XLXI_4 (.I0(counter[0]), 
                .I1(inputpwmlength[0]), 
                .O(XLXN_29));
   XOR2  XLXI_5 (.I0(counter[1]), 
                .I1(inputpwmlength[1]), 
                .O(XLXN_30));
   XOR2  XLXI_6 (.I0(counter[2]), 
                .I1(inputpwmlength[2]), 
                .O(XLXN_31));
   XOR2  XLXI_7 (.I0(counter[3]), 
                .I1(inputpwmlength[3]), 
                .O(XLXN_32));
   XOR2  XLXI_8 (.I0(counter[4]), 
                .I1(inputpwmlength[4]), 
                .O(XLXN_33));
   XOR2  XLXI_9 (.I0(counter[5]), 
                .I1(inputpwmlength[5]), 
                .O(XLXN_34));
   XOR2  XLXI_10 (.I0(counter[6]), 
                 .I1(inputpwmlength[6]), 
                 .O(XLXN_35));
   XOR2  XLXI_11 (.I0(counter[7]), 
                 .I1(inputpwmlength[7]), 
                 .O(XLXN_36));
   (* HU_SET = "XLXI_30_23" *) 
   FTPE_MXILINX_ETC_PWM_USART #( .INIT(1'b1) ) XLXI_30 (.C(clk), 
                                       .CE(clockenable), 
                                       .PRE(XLXN_129), 
                                       .T(XLXN_101), 
                                       .Q(XLXN_114));
   OR4  XLXI_34 (.I0(XLXN_29), 
                .I1(XLXN_30), 
                .I2(XLXN_31), 
                .I3(XLXN_32), 
                .O(XLXN_110));
   OR4  XLXI_35 (.I0(XLXN_33), 
                .I1(XLXN_34), 
                .I2(XLXN_35), 
                .I3(XLXN_36), 
                .O(XLXN_111));
   NOR2  XLXI_36 (.I0(XLXN_110), 
                 .I1(XLXN_111), 
                 .O(XLXN_101));
   OR4  XLXI_48 (.I0(counter[0]), 
                .I1(counter[1]), 
                .I2(counter[2]), 
                .I3(counter[3]), 
                .O(XLXN_106));
   OR4  XLXI_49 (.I0(counter[4]), 
                .I1(counter[5]), 
                .I2(counter[6]), 
                .I3(counter[7]), 
                .O(XLXN_107));
   NOR2  XLXI_50 (.I0(XLXN_106), 
                 .I1(XLXN_107), 
                 .O(XLXN_129));
   AND3  XLXI_52 (.I0(Enable), 
                 .I1(XLXN_114), 
                 .I2(XLXN_128), 
                 .O(Outputpulse));
   OR4  XLXI_54 (.I0(inputpwmlength[4]), 
                .I1(inputpwmlength[5]), 
                .I2(inputpwmlength[6]), 
                .I3(inputpwmlength[7]), 
                .O(XLXN_143));
   OR4  XLXI_55 (.I0(inputpwmlength[0]), 
                .I1(inputpwmlength[1]), 
                .I2(inputpwmlength[2]), 
                .I3(inputpwmlength[3]), 
                .O(XLXN_144));
   OR2  XLXI_57 (.I0(XLXN_144), 
                .I1(XLXN_143), 
                .O(XLXN_128));
endmodule
`timescale 1ns / 1ps

module FTCE_MXILINX_ETC_PWM_USART(C, 
                                  CE, 
                                  CLR, 
                                  T, 
                                  Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDCE  I_36_35 (.C(C), 
                 .CE(CE), 
                 .CLR(CLR), 
                 .D(TQ), 
                 .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module FTRSE_MXILINX_ETC_PWM_USART(C, 
                                   CE, 
                                   R, 
                                   S, 
                                   T, 
                                   Q);

   parameter INIT = 1'b0;
   
    input C;
    input CE;
    input R;
    input S;
    input T;
   output Q;
   
   wire CE_S;
   wire D_S;
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDRE  I_36_35 (.C(C), 
                 .CE(CE_S), 
                 .D(D_S), 
                 .R(R), 
                 .Q(Q_DUMMY));
   OR2  I_36_73 (.I0(S), 
                .I1(TQ), 
                .O(D_S));
   OR2  I_36_77 (.I0(CE), 
                .I1(S), 
                .O(CE_S));
endmodule
`timescale 1ns / 1ps

module CB2RE_MXILINX_ETC_PWM_USART(C, 
                                   CE, 
                                   R, 
                                   CEO, 
                                   Q0, 
                                   Q1, 
                                   TC);

    input C;
    input CE;
    input R;
   output CEO;
   output Q0;
   output Q1;
   output TC;
   
   wire XLXN_1;
   wire XLXN_2;
   wire Q0_DUMMY;
   wire Q1_DUMMY;
   wire TC_DUMMY;
   
   assign Q0 = Q0_DUMMY;
   assign Q1 = Q1_DUMMY;
   assign TC = TC_DUMMY;
   (* HU_SET = "I_Q0_24" *) 
   FTRSE_MXILINX_ETC_PWM_USART #( .INIT(1'b0) ) I_Q0 (.C(C), 
                                     .CE(CE), 
                                     .R(R), 
                                     .S(XLXN_2), 
                                     .T(XLXN_1), 
                                     .Q(Q0_DUMMY));
   (* HU_SET = "I_Q1_25" *) 
   FTRSE_MXILINX_ETC_PWM_USART #( .INIT(1'b0) ) I_Q1 (.C(C), 
                                     .CE(CE), 
                                     .R(R), 
                                     .S(XLXN_2), 
                                     .T(Q0_DUMMY), 
                                     .Q(Q1_DUMMY));
   AND2  I_36_37 (.I0(Q1_DUMMY), 
                 .I1(Q0_DUMMY), 
                 .O(TC_DUMMY));
   VCC  I_36_47 (.P(XLXN_1));
   GND  I_36_54 (.G(XLXN_2));
   AND2  I_36_55 (.I0(CE), 
                 .I1(TC_DUMMY), 
                 .O(CEO));
endmodule
`timescale 1ns / 1ps

module Timer_PWM_MUSER_ETC_PWM_USART(CLK, 
                                     Enable, 
                                     OCR, 
                                     Outp);

    input CLK;
    input Enable;
    input [7:0] OCR;
   output Outp;
   
   wire XLXN_3;
   wire XLXN_7;
   wire XLXN_19;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_27;
   wire XLXN_28;
   
   GND  XLXI_3 (.G(XLXN_3));
   VCC  XLXI_6 (.P(XLXN_7));
   AND2  XLXI_15 (.I0(XLXN_19), 
                 .I1(XLXN_25), 
                 .O(XLXN_21));
   (* HU_SET = "XLXI_16_26" *) 
   CB2RE_MXILINX_ETC_PWM_USART  XLXI_16 (.C(CLK), 
                                        .CE(XLXN_7), 
                                        .R(XLXN_21), 
                                        .CEO(), 
                                        .Q0(XLXN_24), 
                                        .Q1(XLXN_19), 
                                        .TC());
   (* HU_SET = "XLXI_18_27" *) 
   FTCE_MXILINX_ETC_PWM_USART #( .INIT(1'b0) ) XLXI_18 (.C(CLK), 
                                       .CE(XLXN_21), 
                                       .CLR(XLXN_23), 
                                       .T(XLXN_22), 
                                       .Q(XLXN_27));
   VCC  XLXI_19 (.P(XLXN_22));
   GND  XLXI_20 (.G(XLXN_23));
   INV  XLXI_21 (.I(XLXN_24), 
                .O(XLXN_25));
   counter_MUSER_ETC_PWM_USART  XLXI_25 (.clear(XLXN_3), 
                                        .clk(XLXN_27), 
                                        .clockenable(XLXN_28), 
                                        .Enable(Enable), 
                                        .inputpwmlength(OCR[7:0]), 
                                        .Outputpulse(Outp));
   VCC  XLXI_27 (.P(XLXN_28));
endmodule
`timescale 1ns / 1ps

module Flip_Flop_18_MUSER_ETC_PWM_USART(C_0, 
                                        Inp, 
                                        RST, 
                                        Outp);

    input C_0;
    input [17:0] Inp;
    input RST;
   output [17:0] Outp;
   
   
   FDR #( .INIT(1'b0) ) XLXI_1 (.C(C_0), 
               .D(Inp[0]), 
               .R(RST), 
               .Q(Outp[0]));
   FDR #( .INIT(1'b0) ) XLXI_2 (.C(C_0), 
               .D(Inp[1]), 
               .R(RST), 
               .Q(Outp[1]));
   FDR #( .INIT(1'b0) ) XLXI_3 (.C(C_0), 
               .D(Inp[2]), 
               .R(RST), 
               .Q(Outp[2]));
   FDR #( .INIT(1'b0) ) XLXI_4 (.C(C_0), 
               .D(Inp[3]), 
               .R(RST), 
               .Q(Outp[3]));
   FDR #( .INIT(1'b0) ) XLXI_5 (.C(C_0), 
               .D(Inp[4]), 
               .R(RST), 
               .Q(Outp[4]));
   FDR #( .INIT(1'b0) ) XLXI_6 (.C(C_0), 
               .D(Inp[5]), 
               .R(RST), 
               .Q(Outp[5]));
   FDR #( .INIT(1'b0) ) XLXI_7 (.C(C_0), 
               .D(Inp[6]), 
               .R(RST), 
               .Q(Outp[6]));
   FDR #( .INIT(1'b0) ) XLXI_10 (.C(C_0), 
                .D(Inp[7]), 
                .R(RST), 
                .Q(Outp[7]));
   FDR #( .INIT(1'b0) ) XLXI_11 (.C(C_0), 
                .D(Inp[8]), 
                .R(RST), 
                .Q(Outp[8]));
   FDR #( .INIT(1'b0) ) XLXI_12 (.C(C_0), 
                .D(Inp[9]), 
                .R(RST), 
                .Q(Outp[9]));
   FDR #( .INIT(1'b0) ) XLXI_13 (.C(C_0), 
                .D(Inp[10]), 
                .R(RST), 
                .Q(Outp[10]));
   FDR #( .INIT(1'b0) ) XLXI_14 (.C(C_0), 
                .D(Inp[11]), 
                .R(RST), 
                .Q(Outp[11]));
   FDR #( .INIT(1'b0) ) XLXI_15 (.C(C_0), 
                .D(Inp[12]), 
                .R(RST), 
                .Q(Outp[12]));
   FDR #( .INIT(1'b0) ) XLXI_16 (.C(C_0), 
                .D(Inp[13]), 
                .R(RST), 
                .Q(Outp[13]));
   FDR #( .INIT(1'b0) ) XLXI_17 (.C(C_0), 
                .D(Inp[14]), 
                .R(RST), 
                .Q(Outp[14]));
   FDR #( .INIT(1'b0) ) XLXI_18 (.C(C_0), 
                .D(Inp[16]), 
                .R(RST), 
                .Q(Outp[16]));
   FDR #( .INIT(1'b0) ) XLXI_19 (.C(C_0), 
                .D(Inp[15]), 
                .R(RST), 
                .Q(Outp[15]));
   FDR #( .INIT(1'b0) ) XLXI_22 (.C(C_0), 
                .D(Inp[17]), 
                .R(RST), 
                .Q(Outp[17]));
endmodule
`timescale 1ns / 1ps

module Incre_dcre_18_MUSER_ETC_PWM_USART(add_0, 
                                         In_16, 
                                         OUT_16);

    input add_0;
    input [17:0] In_16;
   output [17:0] OUT_16;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_50;
   wire XLXN_52;
   wire XLXN_120;
   wire XLXN_121;
   wire XLXN_122;
   wire XLXN_123;
   wire XLXN_126;
   wire XLXN_127;
   wire XLXN_129;
   wire XLXN_130;
   wire XLXN_131;
   wire XLXN_133;
   wire XLXN_134;
   wire XLXN_135;
   wire XLXN_136;
   wire XLXN_137;
   wire XLXN_140;
   wire XLXN_971;
   wire XLXN_976;
   wire XLXN_982;
   wire XLXN_989;
   wire XLXN_1009;
   wire XLXN_1013;
   wire XLXN_1015;
   wire XLXN_1016;
   wire XLXN_1018;
   wire XLXN_1019;
   wire XLXN_1025;
   wire XLXN_1026;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(In_16[3]), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(In_16[2]), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(In_16[1]), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_14));
   XOR2  XLXI_5 (.I0(add_0), 
                .I1(In_16[5]), 
                .O(XLXN_1));
   XOR2  XLXI_6 (.I0(add_0), 
                .I1(In_16[6]), 
                .O(XLXN_13));
   XOR2  XLXI_7 (.I0(add_0), 
                .I1(In_16[7]), 
                .O(XLXN_5));
   XOR2  XLXI_8 (.I0(add_0), 
                .I1(In_16[4]), 
                .O(XLXN_12));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(In_16[0]), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_15));
   XOR2  XLXI_11 (.I0(XLXN_5), 
                 .I1(XLXN_24), 
                 .O(XLXN_19));
   XOR2  XLXI_12 (.I0(XLXN_13), 
                 .I1(XLXN_6), 
                 .O(XLXN_20));
   XOR2  XLXI_13 (.I0(XLXN_1), 
                 .I1(XLXN_7), 
                 .O(XLXN_21));
   XOR2  XLXI_14 (.I0(XLXN_12), 
                 .I1(XLXN_8), 
                 .O(XLXN_18));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_11), 
                 .O(XLXN_17));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_10), 
                 .O(XLXN_16));
   AND2  XLXI_17 (.I0(XLXN_13), 
                 .I1(XLXN_6), 
                 .O(XLXN_24));
   AND2  XLXI_18 (.I0(XLXN_1), 
                 .I1(XLXN_7), 
                 .O(XLXN_6));
   AND2  XLXI_19 (.I0(XLXN_12), 
                 .I1(XLXN_8), 
                 .O(XLXN_7));
   AND2  XLXI_20 (.I0(XLXN_2), 
                 .I1(XLXN_11), 
                 .O(XLXN_8));
   AND2  XLXI_21 (.I0(XLXN_3), 
                 .I1(XLXN_10), 
                 .O(XLXN_11));
   AND2  XLXI_22 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_10));
   XOR2  XLXI_23 (.I0(add_0), 
                 .I1(XLXN_20), 
                 .O(OUT_16[6]));
   XOR2  XLXI_24 (.I0(add_0), 
                 .I1(XLXN_18), 
                 .O(OUT_16[4]));
   XOR2  XLXI_25 (.I0(add_0), 
                 .I1(XLXN_17), 
                 .O(OUT_16[3]));
   XOR2  XLXI_26 (.I0(add_0), 
                 .I1(XLXN_16), 
                 .O(OUT_16[2]));
   XOR2  XLXI_27 (.I0(add_0), 
                 .I1(XLXN_15), 
                 .O(OUT_16[1]));
   XOR2  XLXI_28 (.I0(add_0), 
                 .I1(XLXN_14), 
                 .O(OUT_16[0]));
   XOR2  XLXI_29 (.I0(add_0), 
                 .I1(XLXN_21), 
                 .O(OUT_16[5]));
   XOR2  XLXI_30 (.I0(XLXN_23), 
                 .I1(XLXN_50), 
                 .O(XLXN_22));
   AND2  XLXI_31 (.I0(XLXN_5), 
                 .I1(XLXN_24), 
                 .O(XLXN_50));
   XOR2  XLXI_32 (.I0(add_0), 
                 .I1(In_16[8]), 
                 .O(XLXN_23));
   XOR2  XLXI_43 (.I0(add_0), 
                 .I1(XLXN_19), 
                 .O(OUT_16[7]));
   XOR2  XLXI_46 (.I0(add_0), 
                 .I1(XLXN_22), 
                 .O(OUT_16[8]));
   XOR2  XLXI_85 (.I0(add_0), 
                 .I1(In_16[12]), 
                 .O(XLXN_121));
   XOR2  XLXI_86 (.I0(add_0), 
                 .I1(In_16[11]), 
                 .O(XLXN_122));
   XOR2  XLXI_87 (.I0(add_0), 
                 .I1(In_16[10]), 
                 .O(XLXN_123));
   XOR2  XLXI_89 (.I0(add_0), 
                 .I1(In_16[14]), 
                 .O(XLXN_120));
   XOR2  XLXI_90 (.I0(add_0), 
                 .I1(In_16[15]), 
                 .O(XLXN_1009));
   XOR2  XLXI_92 (.I0(add_0), 
                 .I1(In_16[13]), 
                 .O(XLXN_131));
   XOR2  XLXI_93 (.I0(add_0), 
                 .I1(In_16[9]), 
                 .O(XLXN_976));
   XOR2  XLXI_94 (.I0(XLXN_123), 
                 .I1(XLXN_982), 
                 .O(XLXN_134));
   XOR2  XLXI_96 (.I0(XLXN_1009), 
                 .I1(XLXN_1018), 
                 .O(XLXN_971));
   XOR2  XLXI_97 (.I0(XLXN_120), 
                 .I1(XLXN_126), 
                 .O(XLXN_140));
   XOR2  XLXI_98 (.I0(XLXN_131), 
                 .I1(XLXN_127), 
                 .O(XLXN_137));
   XOR2  XLXI_99 (.I0(XLXN_121), 
                 .I1(XLXN_130), 
                 .O(XLXN_136));
   XOR2  XLXI_100 (.I0(XLXN_122), 
                  .I1(XLXN_129), 
                  .O(XLXN_135));
   AND2  XLXI_102 (.I0(XLXN_120), 
                  .I1(XLXN_126), 
                  .O(XLXN_1018));
   AND2  XLXI_103 (.I0(XLXN_131), 
                  .I1(XLXN_127), 
                  .O(XLXN_126));
   AND2  XLXI_104 (.I0(XLXN_121), 
                  .I1(XLXN_130), 
                  .O(XLXN_127));
   AND2  XLXI_105 (.I0(XLXN_122), 
                  .I1(XLXN_129), 
                  .O(XLXN_130));
   AND2  XLXI_106 (.I0(XLXN_123), 
                  .I1(XLXN_982), 
                  .O(XLXN_129));
   XOR2  XLXI_108 (.I0(add_0), 
                  .I1(XLXN_971), 
                  .O(OUT_16[15]));
   XOR2  XLXI_109 (.I0(add_0), 
                  .I1(XLXN_137), 
                  .O(OUT_16[13]));
   XOR2  XLXI_110 (.I0(add_0), 
                  .I1(XLXN_136), 
                  .O(OUT_16[12]));
   XOR2  XLXI_111 (.I0(add_0), 
                  .I1(XLXN_135), 
                  .O(OUT_16[11]));
   XOR2  XLXI_112 (.I0(add_0), 
                  .I1(XLXN_134), 
                  .O(OUT_16[10]));
   XOR2  XLXI_113 (.I0(add_0), 
                  .I1(XLXN_133), 
                  .O(OUT_16[9]));
   XOR2  XLXI_114 (.I0(add_0), 
                  .I1(XLXN_140), 
                  .O(OUT_16[14]));
   XOR2  XLXI_527 (.I0(XLXN_976), 
                  .I1(XLXN_989), 
                  .O(XLXN_133));
   AND2  XLXI_528 (.I0(XLXN_23), 
                  .I1(XLXN_50), 
                  .O(XLXN_989));
   AND2  XLXI_529 (.I0(XLXN_976), 
                  .I1(XLXN_989), 
                  .O(XLXN_982));
   XOR2  XLXI_530 (.I0(add_0), 
                  .I1(In_16[16]), 
                  .O(XLXN_1015));
   XOR2  XLXI_531 (.I0(add_0), 
                  .I1(In_16[17]), 
                  .O(XLXN_1016));
   AND2  XLXI_532 (.I0(XLXN_1009), 
                  .I1(XLXN_1018), 
                  .O(XLXN_1019));
   AND2  XLXI_533 (.I0(XLXN_1015), 
                  .I1(XLXN_1019), 
                  .O(XLXN_1013));
   XOR2  XLXI_534 (.I0(XLXN_1015), 
                  .I1(XLXN_1019), 
                  .O(XLXN_1026));
   XOR2  XLXI_535 (.I0(XLXN_1016), 
                  .I1(XLXN_1013), 
                  .O(XLXN_1025));
   XOR2  XLXI_536 (.I0(add_0), 
                  .I1(XLXN_1026), 
                  .O(OUT_16[16]));
   XOR2  XLXI_537 (.I0(add_0), 
                  .I1(XLXN_1025), 
                  .O(OUT_16[17]));
endmodule
`timescale 1ns / 1ps

module Counter_18_MUSER_ETC_PWM_USART(CLK_sys, 
                                      Enable, 
                                      C_0);

    input CLK_sys;
    input Enable;
   output C_0;
   
   wire [17:0] CNT;
   wire [17:0] XLXN_1;
   wire XLXN_4;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_52;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_72;
   wire XLXN_75;
   wire XLXN_79;
   wire XLXN_90;
   wire XLXN_93;
   wire XLXN_96;
   wire XLXN_99;
   
   Incre_dcre_18_MUSER_ETC_PWM_USART  XLXI_1 (.add_0(XLXN_4), 
                                             .In_16(CNT[17:0]), 
                                             .OUT_16(XLXN_1[17:0]));
   Flip_Flop_18_MUSER_ETC_PWM_USART  XLXI_2 (.C_0(CLK_sys), 
                                            .Inp(XLXN_1[17:0]), 
                                            .RST(XLXN_79), 
                                            .Outp(CNT[17:0]));
   GND  XLXI_3 (.G(XLXN_4));
   INV  XLXI_7 (.I(CNT[0]), 
               .O(XLXN_11));
   INV  XLXI_8 (.I(CNT[1]), 
               .O(XLXN_12));
   INV  XLXI_9 (.I(CNT[2]), 
               .O(XLXN_13));
   INV  XLXI_10 (.I(CNT[3]), 
                .O(XLXN_14));
   INV  XLXI_11 (.I(CNT[4]), 
                .O(XLXN_15));
   INV  XLXI_12 (.I(CNT[5]), 
                .O(XLXN_16));
   INV  XLXI_13 (.I(CNT[6]), 
                .O(XLXN_17));
   INV  XLXI_14 (.I(CNT[8]), 
                .O(XLXN_18));
   INV  XLXI_16 (.I(CNT[9]), 
                .O(XLXN_19));
   INV  XLXI_17 (.I(CNT[13]), 
                .O(XLXN_27));
   INV  XLXI_18 (.I(CNT[14]), 
                .O(XLXN_21));
   INV  XLXI_19 (.I(CNT[16]), 
                .O(XLXN_68));
   BUF  XLXI_20 (.I(CNT[7]), 
                .O(XLXN_24));
   BUF  XLXI_21 (.I(CNT[10]), 
                .O(XLXN_20));
   BUF  XLXI_22 (.I(CNT[11]), 
                .O(XLXN_25));
   BUF  XLXI_23 (.I(CNT[12]), 
                .O(XLXN_26));
   BUF  XLXI_24 (.I(CNT[15]), 
                .O(XLXN_22));
   VCC  XLXI_28 (.P(XLXN_52));
   INV  XLXI_38 (.I(CNT[17]), 
                .O(XLXN_23));
   AND4  XLXI_39 (.I0(XLXN_11), 
                 .I1(XLXN_12), 
                 .I2(XLXN_13), 
                 .I3(XLXN_14), 
                 .O(XLXN_64));
   AND4  XLXI_40 (.I0(XLXN_15), 
                 .I1(XLXN_16), 
                 .I2(XLXN_17), 
                 .I3(XLXN_24), 
                 .O(XLXN_65));
   AND4  XLXI_41 (.I0(XLXN_18), 
                 .I1(XLXN_19), 
                 .I2(XLXN_20), 
                 .I3(XLXN_25), 
                 .O(XLXN_66));
   AND4  XLXI_42 (.I0(XLXN_26), 
                 .I1(XLXN_27), 
                 .I2(XLXN_21), 
                 .I3(XLXN_22), 
                 .O(XLXN_67));
   AND4  XLXI_44 (.I0(XLXN_64), 
                 .I1(XLXN_65), 
                 .I2(XLXN_66), 
                 .I3(XLXN_67), 
                 .O(XLXN_72));
   AND4  XLXI_45 (.I0(XLXN_72), 
                 .I1(XLXN_75), 
                 .I2(XLXN_68), 
                 .I3(XLXN_23), 
                 .O(XLXN_10));
   VCC  XLXI_55 (.P(XLXN_75));
   OR2  XLXI_59 (.I0(XLXN_10), 
                .I1(XLXN_93), 
                .O(XLXN_79));
   FD #( .INIT(1'b0) ) XLXI_64 (.C(CLK_sys), 
               .D(Enable), 
               .Q(XLXN_96));
   AND2  XLXI_65 (.I0(Enable), 
                 .I1(XLXN_90), 
                 .O(XLXN_93));
   INV  XLXI_66 (.I(XLXN_96), 
                .O(XLXN_90));
   (* HU_SET = "XLXI_67_28" *) 
   FTPE_MXILINX_ETC_PWM_USART #( .INIT(1'b1) ) XLXI_67 (.C(XLXN_10), 
                                       .CE(Enable), 
                                       .PRE(XLXN_99), 
                                       .T(XLXN_52), 
                                       .Q(C_0));
   INV  XLXI_68 (.I(Enable), 
                .O(XLXN_99));
endmodule
`timescale 1ns / 1ps

module Reg_4bit_MUSER_ETC_PWM_USART(CE, 
                                    CLEAR, 
                                    CLOCK, 
                                    I_0, 
                                    I_1, 
                                    I_2, 
                                    I_3, 
                                    O_0, 
                                    O_1, 
                                    O_2, 
                                    O_3);

    input CE;
    input CLEAR;
    input CLOCK;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_11 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_0), 
                 .Q(O_0));
endmodule
`timescale 1ns / 1ps

module Add_sub_4bit_MUSER_ETC_PWM_USART(add_0, 
                                        I_0, 
                                        I_1, 
                                        I_2, 
                                        I_3, 
                                        O_0, 
                                        O_1, 
                                        O_2, 
                                        O_3);

    input add_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_52;
   wire XLXN_55;
   wire XLXN_57;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(I_3), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(I_2), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(I_1), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_63));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(I_0), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_64));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_66));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_65));
   AND2  XLXI_34 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_57));
   AND2  XLXI_35 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_55));
   XOR2  XLXI_38 (.I0(add_0), 
                 .I1(XLXN_63), 
                 .O(O_0));
   XOR2  XLXI_39 (.I0(add_0), 
                 .I1(XLXN_64), 
                 .O(O_1));
   XOR2  XLXI_40 (.I0(add_0), 
                 .I1(XLXN_65), 
                 .O(O_2));
   XOR2  XLXI_41 (.I0(add_0), 
                 .I1(XLXN_66), 
                 .O(O_3));
endmodule
`timescale 1ns / 1ps

module decade_counter_new_MUSER_ETC_PWM_USART(CE, 
                                              CLEAR, 
                                              CLK, 
                                              OUT_f);

    input CE;
    input CLEAR;
    input CLK;
   output OUT_f;
   
   wire cllr;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_78;
   wire XLXN_106;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_122;
   wire XLXN_125;
   wire XLXN_126;
   wire XLXN_209;
   wire XLXN_213;
   wire OUT_f_DUMMY;
   
   assign OUT_f = OUT_f_DUMMY;
   Add_sub_4bit_MUSER_ETC_PWM_USART  XLXI_1 (.add_0(XLXN_106), 
                                            .I_0(XLXN_109), 
                                            .I_1(XLXN_48), 
                                            .I_2(XLXN_49), 
                                            .I_3(XLXN_78), 
                                            .O_0(XLXN_113), 
                                            .O_1(XLXN_110), 
                                            .O_2(XLXN_111), 
                                            .O_3(XLXN_114));
   GND  XLXI_3 (.G(XLXN_106));
   NAND4  XLXI_45 (.I0(XLXN_109), 
                  .I1(XLXN_48), 
                  .I2(XLXN_209), 
                  .I3(XLXN_78), 
                  .O(OUT_f_DUMMY));
   INV  XLXI_46 (.I(XLXN_49), 
                .O(XLXN_209));
   Reg_4bit_MUSER_ETC_PWM_USART  XLXI_49 (.CE(XLXN_213), 
                                         .CLEAR(cllr), 
                                         .CLOCK(CLK), 
                                         .I_0(XLXN_113), 
                                         .I_1(XLXN_110), 
                                         .I_2(XLXN_111), 
                                         .I_3(XLXN_114), 
                                         .O_0(XLXN_109), 
                                         .O_1(XLXN_48), 
                                         .O_2(XLXN_49), 
                                         .O_3(XLXN_78));
   FD #( .INIT(1'b0) ) XLXI_50 (.C(CLK), 
               .D(XLXN_122), 
               .Q(XLXN_126));
   FD #( .INIT(1'b0) ) XLXI_51 (.C(CLK), 
               .D(CLEAR), 
               .Q(XLXN_122));
   INV  XLXI_52 (.I(XLXN_126), 
                .O(XLXN_125));
   AND2  XLXI_53 (.I0(XLXN_122), 
                 .I1(XLXN_125), 
                 .O(cllr));
   AND2  XLXI_56 (.I0(CE), 
                 .I1(OUT_f_DUMMY), 
                 .O(XLXN_213));
endmodule
`timescale 1ns / 1ps

module bit10datareg_to_transmit_MUSER_ETC_PWM_USART(CLK, 
                                                    I_0, 
                                                    I_1, 
                                                    I_2, 
                                                    I_3, 
                                                    I_4, 
                                                    I_5, 
                                                    I_6, 
                                                    I_7, 
                                                    Parity, 
                                                    S, 
                                                    Start_0, 
                                                    Stop, 
                                                    Serial_output);

    input CLK;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input Parity;
    input S;
    input Start_0;
    input Stop;
   output Serial_output;
   
   wire XLXN_70;
   wire XLXN_72;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_83;
   wire XLXN_85;
   wire XLXN_86;
   wire XLXN_87;
   wire XLXN_89;
   wire XLXN_91;
   wire XLXN_92;
   wire XLXN_94;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_98;
   wire XLXN_99;
   wire XLXN_103;
   wire XLXN_120;
   wire XLXN_137;
   wire XLXN_153;
   
   MUXCY  XLXI_28 (.CI(XLXN_70), 
                  .DI(I_7), 
                  .S(S), 
                  .O(XLXN_80));
   MUXCY  XLXI_30 (.CI(XLXN_72), 
                  .DI(I_6), 
                  .S(S), 
                  .O(XLXN_86));
   MUXCY  XLXI_34 (.CI(XLXN_81), 
                  .DI(I_5), 
                  .S(S), 
                  .O(XLXN_85));
   MUXCY  XLXI_36 (.CI(XLXN_83), 
                  .DI(I_4), 
                  .S(S), 
                  .O(XLXN_98));
   MUXCY  XLXI_38 (.CI(XLXN_87), 
                  .DI(I_3), 
                  .S(S), 
                  .O(XLXN_91));
   MUXCY  XLXI_40 (.CI(XLXN_89), 
                  .DI(I_2), 
                  .S(S), 
                  .O(XLXN_97));
   MUXCY  XLXI_42 (.CI(XLXN_92), 
                  .DI(I_1), 
                  .S(S), 
                  .O(XLXN_96));
   MUXCY  XLXI_44 (.CI(XLXN_94), 
                  .DI(I_0), 
                  .S(S), 
                  .O(XLXN_120));
   MUXCY  XLXI_46 (.CI(XLXN_99), 
                  .DI(Start_0), 
                  .S(S), 
                  .O(XLXN_103));
   FD #( .INIT(1'b0) ) XLXI_60 (.C(CLK), 
               .D(XLXN_137), 
               .Q(XLXN_70));
   FD #( .INIT(1'b0) ) XLXI_61 (.C(CLK), 
               .D(XLXN_80), 
               .Q(XLXN_72));
   FD #( .INIT(1'b0) ) XLXI_62 (.C(CLK), 
               .D(XLXN_86), 
               .Q(XLXN_81));
   FD #( .INIT(1'b0) ) XLXI_63 (.C(CLK), 
               .D(XLXN_85), 
               .Q(XLXN_83));
   FD #( .INIT(1'b0) ) XLXI_64 (.C(CLK), 
               .D(XLXN_98), 
               .Q(XLXN_87));
   FD #( .INIT(1'b0) ) XLXI_65 (.C(CLK), 
               .D(XLXN_91), 
               .Q(XLXN_89));
   FD #( .INIT(1'b0) ) XLXI_66 (.C(CLK), 
               .D(XLXN_97), 
               .Q(XLXN_92));
   FD #( .INIT(1'b0) ) XLXI_67 (.C(CLK), 
               .D(XLXN_96), 
               .Q(XLXN_94));
   FD #( .INIT(1'b0) ) XLXI_68 (.C(CLK), 
               .D(XLXN_120), 
               .Q(XLXN_99));
   FD #( .INIT(1'b0) ) XLXI_69 (.C(CLK), 
               .D(XLXN_103), 
               .Q(Serial_output));
   FD #( .INIT(1'b0) ) XLXI_71 (.C(CLK), 
               .D(Stop), 
               .Q(XLXN_153));
   MUXCY  XLXI_72 (.CI(XLXN_153), 
                  .DI(Parity), 
                  .S(S), 
                  .O(XLXN_137));
endmodule
`timescale 1ns / 1ps

module Parity_gen_MUSER_ETC_PWM_USART(I_0, 
                                      I_1, 
                                      I_2, 
                                      I_3, 
                                      I_4, 
                                      I_5, 
                                      I_6, 
                                      I_7, 
                                      PARITY);

    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
   output PARITY;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_10;
   
   XOR2  XLXI_1 (.I0(I_1), 
                .I1(I_0), 
                .O(XLXN_1));
   XOR2  XLXI_2 (.I0(I_3), 
                .I1(I_2), 
                .O(XLXN_7));
   XOR2  XLXI_3 (.I0(I_5), 
                .I1(I_4), 
                .O(XLXN_3));
   XOR2  XLXI_4 (.I0(I_7), 
                .I1(I_6), 
                .O(XLXN_6));
   XOR2  XLXI_5 (.I0(XLXN_7), 
                .I1(XLXN_1), 
                .O(XLXN_4));
   XOR2  XLXI_7 (.I0(XLXN_6), 
                .I1(XLXN_3), 
                .O(XLXN_10));
   XOR2  XLXI_8 (.I0(XLXN_10), 
                .I1(XLXN_4), 
                .O(PARITY));
endmodule
`timescale 1ns / 1ps

module usart_transmiter_MUSER_ETC_PWM_USART(CLK_Baud, 
                                            CLR, 
                                            Data, 
                                            Enable, 
                                            OUT_ser);

    input CLK_Baud;
    input CLR;
    input [7:0] Data;
    input Enable;
   output OUT_ser;
   
   wire XLXN_42;
   wire XLXN_47;
   wire XLXN_54;
   wire XLXN_76;
   wire XLXN_77;
   wire XLXN_78;
   
   GND  XLXI_8 (.G(XLXN_54));
   Parity_gen_MUSER_ETC_PWM_USART  XLXI_9 (.I_0(Data[0]), 
                                          .I_1(Data[1]), 
                                          .I_2(Data[2]), 
                                          .I_3(Data[3]), 
                                          .I_4(Data[4]), 
                                          .I_5(Data[5]), 
                                          .I_6(Data[6]), 
                                          .I_7(Data[7]), 
                                          .PARITY(XLXN_42));
   VCC  XLXI_22 (.P(XLXN_47));
   VCC  XLXI_30 (.P(XLXN_76));
   bit10datareg_to_transmit_MUSER_ETC_PWM_USART  XLXI_36 (.CLK(CLK_Baud), 
                                                         .I_0(Data[0]), 
                                                         .I_1(Data[1]), 
                                                         .I_2(Data[2]), 
                                                         .I_3(Data[3]), 
                                                         .I_4(Data[4]), 
                                                         .I_5(Data[5]), 
                                                         .I_6(Data[6]), 
                                                         .I_7(Data[7]), 
                                                         .Parity(XLXN_42), 
                                                         .S(XLXN_78), 
                                                         .Start_0(XLXN_54), 
                                                         .Stop(XLXN_47), 
                                                         
         .Serial_output(XLXN_77));
   MUXCY  XLXI_37 (.CI(XLXN_77), 
                  .DI(XLXN_76), 
                  .S(XLXN_78), 
                  .O(OUT_ser));
   decade_counter_new_MUSER_ETC_PWM_USART  XLXI_39 (.CE(Enable), 
                                                   .CLEAR(CLR), 
                                                   .CLK(CLK_Baud), 
                                                   .OUT_f(XLXN_78));
endmodule
`timescale 1ns / 1ps

module Bit9_to_Bit8_MUSER_ETC_PWM_USART(Data_9, 
                                        Data_8, 
                                        OFL);

    input [8:0] Data_9;
   output [7:0] Data_8;
   output OFL;
   
   
   BUF  XLXI_1 (.I(Data_9[0]), 
               .O(Data_8[0]));
   BUF  XLXI_2 (.I(Data_9[1]), 
               .O(Data_8[1]));
   BUF  XLXI_3 (.I(Data_9[2]), 
               .O(Data_8[2]));
   BUF  XLXI_4 (.I(Data_9[3]), 
               .O(Data_8[3]));
   BUF  XLXI_5 (.I(Data_9[4]), 
               .O(Data_8[4]));
   BUF  XLXI_6 (.I(Data_9[5]), 
               .O(Data_8[5]));
   BUF  XLXI_7 (.I(Data_9[6]), 
               .O(Data_8[6]));
   BUF  XLXI_8 (.I(Data_9[8]), 
               .O(Data_8[7]));
   XOR2  XLXI_11 (.I0(Data_9[8]), 
                 .I1(Data_9[7]), 
                 .O(OFL));
endmodule
`timescale 1ns / 1ps

module Bit8_to_bit9_MUSER_ETC_PWM_USART(Data_8, 
                                        Data_9);

    input [7:0] Data_8;
   output [8:0] Data_9;
   
   
   BUF  XLXI_1 (.I(Data_8[0]), 
               .O(Data_9[0]));
   BUF  XLXI_2 (.I(Data_8[1]), 
               .O(Data_9[1]));
   BUF  XLXI_3 (.I(Data_8[2]), 
               .O(Data_9[2]));
   BUF  XLXI_4 (.I(Data_8[3]), 
               .O(Data_9[3]));
   BUF  XLXI_5 (.I(Data_8[4]), 
               .O(Data_9[4]));
   BUF  XLXI_6 (.I(Data_8[5]), 
               .O(Data_9[5]));
   BUF  XLXI_7 (.I(Data_8[6]), 
               .O(Data_9[6]));
   BUF  XLXI_8 (.I(Data_8[7]), 
               .O(Data_9[7]));
   BUF  XLXI_9 (.I(Data_8[7]), 
               .O(Data_9[8]));
endmodule
`timescale 1ns / 1ps

module FTC_MXILINX_ETC_PWM_USART(C, 
                                 CLR, 
                                 T, 
                                 Q);

   parameter INIT = 1'b0;
   
    input C;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDC  I_36_35 (.C(C), 
                .CLR(CLR), 
                .D(TQ), 
                .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module Precale_434_MUSER_ETC_PWM_USART(CLK, 
                                       CLK_O);

    input CLK;
   output CLK_O;
   
   wire RST;
   wire TICK0;
   wire TICK1;
   wire TICK2;
   wire TICK3;
   wire TICK4;
   wire TICK5;
   wire TICK6;
   wire TICK7;
   wire TICK8;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_39;
   wire XLXN_42;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_135;
   wire XLXN_136;
   wire XLXN_137;
   
   Flip_flip9_MUSER_ETC_PWM_USART  XLXI_3 (.CE(XLXN_52), 
                                          .C_0(CLK), 
                                          .I_0(XLXN_2), 
                                          .I_1(XLXN_4), 
                                          .I_2(XLXN_6), 
                                          .I_3(XLXN_8), 
                                          .I_4(XLXN_10), 
                                          .I_5(XLXN_11), 
                                          .I_6(XLXN_14), 
                                          .I_7(XLXN_12), 
                                          .I_8(XLXN_13), 
                                          .RST(RST), 
                                          .O_0(TICK0), 
                                          .O_1(TICK1), 
                                          .O_2(TICK2), 
                                          .O_3(TICK3), 
                                          .O_4(TICK4), 
                                          .O_5(TICK5), 
                                          .O_6(TICK6), 
                                          .O_7(TICK7), 
                                          .O_8(TICK8));
   Incrementer_Decrementer_MUSER_ETC_PWM_USART  XLXI_4 (.add_0(XLXN_53), 
                                                       .I_0(TICK0), 
                                                       .I_1(TICK1), 
                                                       .I_2(TICK2), 
                                                       .I_3(TICK3), 
                                                       .I_4(TICK4), 
                                                       .I_5(TICK5), 
                                                       .I_6(TICK6), 
                                                       .I_7(TICK7), 
                                                       .I_8(TICK8), 
                                                       .O_0(XLXN_2), 
                                                       .O_1(XLXN_4), 
                                                       .O_2(XLXN_6), 
                                                       .O_3(XLXN_8), 
                                                       .O_4(XLXN_10), 
                                                       .O_5(XLXN_11), 
                                                       .O_6(XLXN_14), 
                                                       .O_7(XLXN_12), 
                                                       .O_8(XLXN_13));
   INV  XLXI_6 (.I(TICK8), 
               .O(XLXN_39));
   INV  XLXI_13 (.I(TICK5), 
                .O(XLXN_42));
   (* HU_SET = "XLXI_14_29" *) 
   FTC_MXILINX_ETC_PWM_USART #( .INIT(1'b0) ) XLXI_14 (.C(RST), 
                                      .CLR(XLXN_48), 
                                      .T(XLXN_46), 
                                      .Q(CLK_O));
   VCC  XLXI_15 (.P(XLXN_46));
   GND  XLXI_17 (.G(XLXN_48));
   VCC  XLXI_18 (.P(XLXN_52));
   GND  XLXI_19 (.G(XLXN_53));
   INV  XLXI_20 (.I(TICK1), 
                .O(XLXN_58));
   INV  XLXI_21 (.I(TICK2), 
                .O(XLXN_57));
   AND4  XLXI_22 (.I0(XLXN_58), 
                 .I1(XLXN_57), 
                 .I2(TICK3), 
                 .I3(TICK4), 
                 .O(XLXN_135));
   AND4  XLXI_23 (.I0(XLXN_42), 
                 .I1(TICK6), 
                 .I2(TICK7), 
                 .I3(XLXN_39), 
                 .O(XLXN_137));
   AND2  XLXI_24 (.I0(TICK0), 
                 .I1(XLXN_135), 
                 .O(XLXN_136));
   AND2  XLXI_25 (.I0(XLXN_136), 
                 .I1(XLXN_137), 
                 .O(RST));
endmodule
`timescale 1ns / 1ps

module outputreg_at_end_ofinput_MUSER_ETC_PWM_USART(CE, 
                                                    I_0, 
                                                    I_1, 
                                                    I_2, 
                                                    I_3, 
                                                    I_4, 
                                                    I_5, 
                                                    I_6, 
                                                    I_7, 
                                                    rising_edge, 
                                                    RST, 
                                                    O_0, 
                                                    O_1, 
                                                    O_2, 
                                                    O_3, 
                                                    O_4, 
                                                    O_5, 
                                                    O_6, 
                                                    O_7);

    input CE;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input rising_edge;
    input RST;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(rising_edge), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_5), 
                 .Q(O_5));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(rising_edge), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_4), 
                 .Q(O_4));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(rising_edge), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_15 (.C(rising_edge), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_16 (.C(rising_edge), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_17 (.C(rising_edge), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_0), 
                 .Q(O_0));
   FDCE #( .INIT(1'b0) ) XLXI_19 (.C(rising_edge), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_7), 
                 .Q(O_7));
   FDCE #( .INIT(1'b0) ) XLXI_20 (.C(rising_edge), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_6), 
                 .Q(O_6));
endmodule
`timescale 1ns / 1ps

module nin_counter_MUSER_ETC_PWM_USART(CLEAR, 
                                       CLK, 
                                       OUT_f);

    input CLEAR;
    input CLK;
   output OUT_f;
   
   wire cllr;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_78;
   wire XLXN_106;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_122;
   wire XLXN_125;
   wire XLXN_126;
   wire XLXN_208;
   wire XLXN_209;
   wire XLXN_210;
   wire OUT_f_DUMMY;
   
   assign OUT_f = OUT_f_DUMMY;
   GND  XLXI_1 (.G(XLXN_106));
   Add_sub_4bit_MUSER_ETC_PWM_USART  XLXI_3 (.add_0(XLXN_106), 
                                            .I_0(XLXN_109), 
                                            .I_1(XLXN_48), 
                                            .I_2(XLXN_49), 
                                            .I_3(XLXN_78), 
                                            .O_0(XLXN_113), 
                                            .O_1(XLXN_110), 
                                            .O_2(XLXN_111), 
                                            .O_3(XLXN_114));
   NAND4  XLXI_45 (.I0(XLXN_210), 
                  .I1(XLXN_208), 
                  .I2(XLXN_209), 
                  .I3(XLXN_78), 
                  .O(OUT_f_DUMMY));
   INV  XLXI_46 (.I(XLXN_49), 
                .O(XLXN_209));
   Reg_4bit_MUSER_ETC_PWM_USART  XLXI_49 (.CE(OUT_f_DUMMY), 
                                         .CLEAR(cllr), 
                                         .CLOCK(CLK), 
                                         .I_0(XLXN_113), 
                                         .I_1(XLXN_110), 
                                         .I_2(XLXN_111), 
                                         .I_3(XLXN_114), 
                                         .O_0(XLXN_109), 
                                         .O_1(XLXN_48), 
                                         .O_2(XLXN_49), 
                                         .O_3(XLXN_78));
   FD #( .INIT(1'b0) ) XLXI_50 (.C(CLK), 
               .D(XLXN_122), 
               .Q(XLXN_126));
   FD #( .INIT(1'b0) ) XLXI_51 (.C(CLK), 
               .D(CLEAR), 
               .Q(XLXN_122));
   INV  XLXI_52 (.I(XLXN_126), 
                .O(XLXN_125));
   AND2  XLXI_53 (.I0(XLXN_122), 
                 .I1(XLXN_125), 
                 .O(cllr));
   INV  XLXI_55 (.I(XLXN_48), 
                .O(XLXN_208));
   INV  XLXI_56 (.I(XLXN_109), 
                .O(XLXN_210));
endmodule
`timescale 1ns / 1ps

module SIPO_reg_MUSER_ETC_PWM_USART(CE, 
                                    CLK, 
                                    CLR, 
                                    Serial_input, 
                                    O_0, 
                                    O_1, 
                                    O_2, 
                                    O_3, 
                                    O_4, 
                                    O_5, 
                                    O_6, 
                                    O_7, 
                                    parity, 
                                    start_bit);

    input CE;
    input CLK;
    input CLR;
    input Serial_input;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   output parity;
   output start_bit;
   
   wire O_0_DUMMY;
   wire O_1_DUMMY;
   wire O_2_DUMMY;
   wire O_3_DUMMY;
   wire O_4_DUMMY;
   wire O_5_DUMMY;
   wire O_6_DUMMY;
   wire O_7_DUMMY;
   wire parity_DUMMY;
   
   assign O_0 = O_0_DUMMY;
   assign O_1 = O_1_DUMMY;
   assign O_2 = O_2_DUMMY;
   assign O_3 = O_3_DUMMY;
   assign O_4 = O_4_DUMMY;
   assign O_5 = O_5_DUMMY;
   assign O_6 = O_6_DUMMY;
   assign O_7 = O_7_DUMMY;
   assign parity = parity_DUMMY;
   FDRE #( .INIT(1'b0) ) XLXI_1 (.C(CLK), 
                .CE(CE), 
                .D(Serial_input), 
                .R(CLR), 
                .Q(parity_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_2 (.C(CLK), 
                .CE(CE), 
                .D(parity_DUMMY), 
                .R(CLR), 
                .Q(O_7_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_3 (.C(CLK), 
                .CE(CE), 
                .D(O_7_DUMMY), 
                .R(CLR), 
                .Q(O_6_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_4 (.C(CLK), 
                .CE(CE), 
                .D(O_6_DUMMY), 
                .R(CLR), 
                .Q(O_5_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_5 (.C(CLK), 
                .CE(CE), 
                .D(O_5_DUMMY), 
                .R(CLR), 
                .Q(O_4_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_6 (.C(CLK), 
                .CE(CE), 
                .D(O_4_DUMMY), 
                .R(CLR), 
                .Q(O_3_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_7 (.C(CLK), 
                .CE(CE), 
                .D(O_3_DUMMY), 
                .R(CLR), 
                .Q(O_2_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_8 (.C(CLK), 
                .CE(CE), 
                .D(O_2_DUMMY), 
                .R(CLR), 
                .Q(O_1_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_9 (.C(CLK), 
                .CE(CE), 
                .D(O_1_DUMMY), 
                .R(CLR), 
                .Q(O_0_DUMMY));
   FDRE #( .INIT(1'b0) ) XLXI_10 (.C(CLK), 
                 .CE(CE), 
                 .D(O_0_DUMMY), 
                 .R(CLR), 
                 .Q(start_bit));
endmodule
`timescale 1ns / 1ps

module usart_receiver_MUSER_ETC_PWM_USART(CLK_Baud, 
                                          CLK_Sys, 
                                          Serial_input, 
                                          Data, 
                                          Parity_ERR);

    input CLK_Baud;
    input CLK_Sys;
    input Serial_input;
   output [7:0] Data;
   output Parity_ERR;
   
   wire dec;
   wire par;
   wire XLXN_52;
   wire XLXN_63;
   wire XLXN_75;
   wire XLXN_123;
   wire XLXN_134;
   wire XLXN_135;
   wire XLXN_136;
   wire XLXN_137;
   wire XLXN_138;
   wire XLXN_144;
   wire XLXN_145;
   wire XLXN_159;
   wire XLXN_160;
   wire XLXN_161;
   wire XLXN_165;
   wire XLXN_170;
   
   XOR2  XLXI_13 (.I0(XLXN_63), 
                 .I1(par), 
                 .O(XLXN_170));
   Parity_gen_MUSER_ETC_PWM_USART  XLXI_14 (.I_0(XLXN_138), 
                                           .I_1(XLXN_137), 
                                           .I_2(XLXN_136), 
                                           .I_3(XLXN_135), 
                                           .I_4(XLXN_134), 
                                           .I_5(XLXN_161), 
                                           .I_6(XLXN_160), 
                                           .I_7(XLXN_159), 
                                           .PARITY(XLXN_63));
   GND  XLXI_25 (.G(XLXN_75));
   NOR2  XLXI_52 (.I0(dec), 
                 .I1(XLXN_165), 
                 .O(XLXN_123));
   SIPO_reg_MUSER_ETC_PWM_USART  XLXI_54 (.CE(dec), 
                                         .CLK(CLK_Baud), 
                                         .CLR(XLXN_75), 
                                         .Serial_input(XLXN_165), 
                                         .O_0(XLXN_159), 
                                         .O_1(XLXN_160), 
                                         .O_2(XLXN_161), 
                                         .O_3(XLXN_134), 
                                         .O_4(XLXN_135), 
                                         .O_5(XLXN_136), 
                                         .O_6(XLXN_137), 
                                         .O_7(XLXN_138), 
                                         .parity(par), 
                                         .start_bit());
   nin_counter_MUSER_ETC_PWM_USART  XLXI_57 (.CLEAR(XLXN_123), 
                                            .CLK(CLK_Baud), 
                                            .OUT_f(dec));
   outputreg_at_end_ofinput_MUSER_ETC_PWM_USART  XLXI_59 (.CE(XLXN_145), 
                                                         .I_0(XLXN_159), 
                                                         .I_1(XLXN_160), 
                                                         .I_2(XLXN_161), 
                                                         .I_3(XLXN_134), 
                                                         .I_4(XLXN_135), 
                                                         .I_5(XLXN_136), 
                                                         .I_6(XLXN_137), 
                                                         .I_7(XLXN_138), 
                                                         .rising_edge(XLXN_52), 
                                                         .RST(XLXN_144), 
                                                         .O_0(Data[0]), 
                                                         .O_1(Data[1]), 
                                                         .O_2(Data[2]), 
                                                         .O_3(Data[3]), 
                                                         .O_4(Data[4]), 
                                                         .O_5(Data[5]), 
                                                         .O_6(Data[6]), 
                                                         .O_7(Data[7]));
   GND  XLXI_60 (.G(XLXN_144));
   VCC  XLXI_61 (.P(XLXN_145));
   INV  XLXI_62 (.I(dec), 
                .O(XLXN_52));
   Digital_Filter_MUSER_ETC_PWM_USART  XLXI_64 (.CLK(CLK_Sys), 
                                               .Inp(Serial_input), 
                                               .Outp(XLXN_165));
   FD #( .INIT(1'b0) ) XLXI_65 (.C(dec), 
               .D(XLXN_170), 
               .Q(Parity_ERR));
endmodule
`timescale 1ns / 1ps

module ETC_PWM_USART(CLK, 
                     Enable, 
                     E_1, 
                     E_2, 
                     Kd, 
                     Kp, 
                     Rx, 
                     PWM1, 
                     PWM2, 
                     Ticks, 
                     Ticks_OFL, 
                     Ticks_8, 
                     Tx);

    input CLK;
    input Enable;
    input E_1;
    input E_2;
    input [3:0] Kd;
    input [3:0] Kp;
    input Rx;
   output PWM1;
   output PWM2;
   output [8:0] Ticks;
   output Ticks_OFL;
   output [7:0] Ticks_8;
   output Tx;
   
   wire [8:0] Target;
   wire [7:0] Ticks_counted_8;
   wire XLXN_15;
   wire XLXN_23;
   wire XLXN_33;
   wire [8:0] XLXN_39;
   wire [7:0] XLXN_54;
   wire [7:0] XLXN_55;
   wire XLXN_91;
   wire XLXN_92;
   wire XLXN_95;
   wire XLXN_126;
   wire XLXN_127;
   wire XLXN_128;
   wire [7:0] Ticks_8_DUMMY;
   wire [8:0] Ticks_DUMMY;
   
   assign Ticks[8:0] = Ticks_DUMMY[8:0];
   assign Ticks_8[7:0] = Ticks_8_DUMMY[7:0];
   usart_receiver_MUSER_ETC_PWM_USART  XLXI_6 (.CLK_Baud(XLXN_15), 
                                              .CLK_Sys(CLK), 
                                              .Serial_input(Rx), 
                                              .Data(Ticks_8_DUMMY[7:0]), 
                                              .Parity_ERR(XLXN_23));
   usart_transmiter_MUSER_ETC_PWM_USART  XLXI_7 (.CLK_Baud(XLXN_15), 
                                                .CLR(), 
                                                .Data(Ticks_counted_8[7:0]), 
                                                .Enable(XLXN_92), 
                                                .OUT_ser(Tx));
   Precale_434_MUSER_ETC_PWM_USART  XLXI_8 (.CLK(CLK), 
                                           .CLK_O(XLXN_15));
   GND  XLXI_11 (.G(XLXN_33));
   FD9CE_MUSER_ETC_PWM_USART  XLXI_12 (.C(CLK), 
                                      .CE(XLXN_128), 
                                      .CLR(XLXN_33), 
                                      .D(XLXN_39[8:0]), 
                                      .Q(Target[8:0]));
   Bit8_to_bit9_MUSER_ETC_PWM_USART  XLXI_13 (.Data_8(Ticks_8_DUMMY[7:0]), 
                                             .Data_9(XLXN_39[8:0]));
   Bit9_to_Bit8_MUSER_ETC_PWM_USART  XLXI_14 (.Data_9(Ticks_DUMMY[8:0]), 
                                             .Data_8(Ticks_counted_8[7:0]), 
                                             .OFL(Ticks_OFL));
   Timer_PWM_MUSER_ETC_PWM_USART  XLXI_17 (.CLK(CLK), 
                                          .Enable(XLXN_91), 
                                          .OCR(XLXN_54[7:0]), 
                                          .Outp(PWM1));
   Timer_PWM_MUSER_ETC_PWM_USART  XLXI_18 (.CLK(CLK), 
                                          .Enable(XLXN_91), 
                                          .OCR(XLXN_55[7:0]), 
                                          .Outp(PWM2));
   Counter_18_MUSER_ETC_PWM_USART  XLXI_20 (.CLK_sys(CLK), 
                                           .C_0(XLXN_127));
   PID_Module_MUSER_ETC_PWM_USART  XLXI_21 (.CLK_TInt(XLXN_127), 
                                           .Kd(Kd[3:0]), 
                                           .Kp(Kp[3:0]), 
                                           .Open_Loop_0(Enable), 
                                           .Target(Target[8:0]), 
                                           .Ticks(Ticks_DUMMY[8:0]), 
                                           .OCR1(XLXN_54[7:0]), 
                                           .OCR2(XLXN_55[7:0]));
   VCC  XLXI_22 (.P(XLXN_91));
   VCC  XLXI_23 (.P(XLXN_92));
   VCC  XLXI_24 (.P(XLXN_95));
   Main_Module_MUSER_ETC_PWM_USART  XLXI_25 (.CLK(CLK), 
                                            .CLK_TInt(XLXN_127), 
                                            .E_1(E_1), 
                                            .E_2(E_2), 
                                            .RST_1(XLXN_126), 
                                            .Ticks(Ticks_DUMMY[8:0]));
   GND  XLXI_28 (.G(XLXN_126));
   VCC  XLXI_29 (.P(XLXN_128));
endmodule
