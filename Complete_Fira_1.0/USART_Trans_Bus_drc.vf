////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : USART_Trans_Bus_drc.vf
// /___/   /\     Timestamp : 05/12/2015 06:59:40
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.2\ISE_DS\ISE\bin\nt\unwrapped\sch2hdl.exe -intstyle ise -family spartan3e -verilog USART_Trans_Bus_drc.vf -w E:/FPGA_Xilinx/ETC_WITH_LEDs/USART_Trans_Bus.sch
//Design Name: USART_Trans_Bus
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FTC_MXILINX_USART_Trans_Bus(C, 
                                   CLR, 
                                   T, 
                                   Q);

   parameter INIT = 1'b0;
   
    input C;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDC  I_36_35 (.C(C), 
                .CLR(CLR), 
                .D(TQ), 
                .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module AND9_MXILINX_USART_Trans_Bus(I0, 
                                    I1, 
                                    I2, 
                                    I3, 
                                    I4, 
                                    I5, 
                                    I6, 
                                    I7, 
                                    I8, 
                                    O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
    input I8;
   output O;
   
   wire dummy;
   wire S0;
   wire S1;
   wire O_DUMMY;
   
   assign O = O_DUMMY;
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_29 (.I1(I0), 
                 .I2(I1), 
                 .I3(I2), 
                 .I4(I3), 
                 .O(S0));
   AND4  I_36_110 (.I0(I0), 
                  .I1(I1), 
                  .I2(I2), 
                  .I3(I3), 
                  .O(S0));
   AND4  I_36_127 (.I0(I4), 
                  .I1(I5), 
                  .I2(I6), 
                  .I3(I7), 
                  .O(S1));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_138 (.I1(I4), 
                  .I2(I5), 
                  .I3(I6), 
                  .I4(I7), 
                  .O(S1));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_142 (.I1(S0), 
                  .I2(S1), 
                  .I3(I8), 
                  .I4(dummy), 
                  .O(O_DUMMY));
   AND3  I_36_176 (.I0(S0), 
                  .I1(S1), 
                  .I2(I8), 
                  .O(O_DUMMY));
endmodule
`timescale 1ns / 1ps

module Incrementer_Decrementer_MUSER_USART_Trans_Bus(add_0, 
                                                     I_0, 
                                                     I_1, 
                                                     I_2, 
                                                     I_3, 
                                                     I_4, 
                                                     I_5, 
                                                     I_6, 
                                                     I_7, 
                                                     I_8, 
                                                     O_0, 
                                                     O_1, 
                                                     O_2, 
                                                     O_3, 
                                                     O_4, 
                                                     O_5, 
                                                     O_6, 
                                                     O_7, 
                                                     O_8);

    input add_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input I_8;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   output O_8;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_52;
   wire XLXN_55;
   wire XLXN_57;
   wire XLXN_59;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(I_3), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(I_2), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(I_1), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_63));
   XOR2  XLXI_5 (.I0(add_0), 
                .I1(I_5), 
                .O(XLXN_1));
   XOR2  XLXI_6 (.I0(add_0), 
                .I1(I_6), 
                .O(XLXN_62));
   XOR2  XLXI_7 (.I0(add_0), 
                .I1(I_7), 
                .O(XLXN_5));
   XOR2  XLXI_8 (.I0(add_0), 
                .I1(I_4), 
                .O(XLXN_59));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(I_0), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_64));
   XOR2  XLXI_11 (.I0(XLXN_5), 
                 .I1(XLXN_75), 
                 .O(XLXN_68));
   XOR2  XLXI_12 (.I0(XLXN_62), 
                 .I1(XLXN_46), 
                 .O(XLXN_69));
   XOR2  XLXI_13 (.I0(XLXN_1), 
                 .I1(XLXN_47), 
                 .O(XLXN_70));
   XOR2  XLXI_14 (.I0(XLXN_59), 
                 .I1(XLXN_48), 
                 .O(XLXN_67));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_66));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_65));
   AND2  XLXI_17 (.I0(XLXN_62), 
                 .I1(XLXN_46), 
                 .O(XLXN_75));
   AND2  XLXI_18 (.I0(XLXN_1), 
                 .I1(XLXN_47), 
                 .O(XLXN_46));
   AND2  XLXI_19 (.I0(XLXN_59), 
                 .I1(XLXN_48), 
                 .O(XLXN_47));
   AND2  XLXI_20 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_48));
   AND2  XLXI_21 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_57));
   AND2  XLXI_35 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_55));
   XOR2  XLXI_38 (.I0(add_0), 
                 .I1(XLXN_63), 
                 .O(O_0));
   XOR2  XLXI_39 (.I0(add_0), 
                 .I1(XLXN_64), 
                 .O(O_1));
   XOR2  XLXI_40 (.I0(add_0), 
                 .I1(XLXN_65), 
                 .O(O_2));
   XOR2  XLXI_41 (.I0(add_0), 
                 .I1(XLXN_66), 
                 .O(O_3));
   XOR2  XLXI_42 (.I0(add_0), 
                 .I1(XLXN_67), 
                 .O(O_4));
   XOR2  XLXI_43 (.I0(add_0), 
                 .I1(XLXN_68), 
                 .O(O_7));
   XOR2  XLXI_44 (.I0(add_0), 
                 .I1(XLXN_69), 
                 .O(O_6));
   XOR2  XLXI_45 (.I0(add_0), 
                 .I1(XLXN_70), 
                 .O(O_5));
   XOR2  XLXI_46 (.I0(add_0), 
                 .I1(XLXN_71), 
                 .O(O_8));
   XOR2  XLXI_48 (.I0(XLXN_74), 
                 .I1(XLXN_73), 
                 .O(XLXN_71));
   AND2  XLXI_49 (.I0(XLXN_5), 
                 .I1(XLXN_75), 
                 .O(XLXN_73));
   XOR2  XLXI_50 (.I0(add_0), 
                 .I1(I_8), 
                 .O(XLXN_74));
endmodule
`timescale 1ns / 1ps

module Flip_flip9_MUSER_USART_Trans_Bus(CE, 
                                        C_0, 
                                        I_0, 
                                        I_1, 
                                        I_2, 
                                        I_3, 
                                        I_4, 
                                        I_5, 
                                        I_6, 
                                        I_7, 
                                        I_8, 
                                        RST, 
                                        O_0, 
                                        O_1, 
                                        O_2, 
                                        O_3, 
                                        O_4, 
                                        O_5, 
                                        O_6, 
                                        O_7, 
                                        O_8);

    input CE;
    input C_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input I_8;
    input RST;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   output O_8;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_5), 
                 .Q(O_5));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_4), 
                 .Q(O_4));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_15 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_16 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_17 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_0), 
                 .Q(O_0));
   FDCE #( .INIT(1'b0) ) XLXI_18 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_8), 
                 .Q(O_8));
   FDCE #( .INIT(1'b0) ) XLXI_19 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_7), 
                 .Q(O_7));
   FDCE #( .INIT(1'b0) ) XLXI_20 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_6), 
                 .Q(O_6));
endmodule
`timescale 1ns / 1ps

module Precale_434_MUSER_USART_Trans_Bus(CLK, 
                                         CLK_O);

    input CLK;
   output CLK_O;
   
   wire RST;
   wire TICK0;
   wire TICK1;
   wire TICK2;
   wire TICK3;
   wire TICK4;
   wire TICK5;
   wire TICK6;
   wire TICK7;
   wire TICK8;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_39;
   wire XLXN_42;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_57;
   wire XLXN_58;
   
   Flip_flip9_MUSER_USART_Trans_Bus  XLXI_3 (.CE(XLXN_52), 
                                            .C_0(CLK), 
                                            .I_0(XLXN_2), 
                                            .I_1(XLXN_4), 
                                            .I_2(XLXN_6), 
                                            .I_3(XLXN_8), 
                                            .I_4(XLXN_10), 
                                            .I_5(XLXN_11), 
                                            .I_6(XLXN_14), 
                                            .I_7(XLXN_12), 
                                            .I_8(XLXN_13), 
                                            .RST(RST), 
                                            .O_0(TICK0), 
                                            .O_1(TICK1), 
                                            .O_2(TICK2), 
                                            .O_3(TICK3), 
                                            .O_4(TICK4), 
                                            .O_5(TICK5), 
                                            .O_6(TICK6), 
                                            .O_7(TICK7), 
                                            .O_8(TICK8));
   Incrementer_Decrementer_MUSER_USART_Trans_Bus  XLXI_4 (.add_0(XLXN_53), 
                                                         .I_0(TICK0), 
                                                         .I_1(TICK1), 
                                                         .I_2(TICK2), 
                                                         .I_3(TICK3), 
                                                         .I_4(TICK4), 
                                                         .I_5(TICK5), 
                                                         .I_6(TICK6), 
                                                         .I_7(TICK7), 
                                                         .I_8(TICK8), 
                                                         .O_0(XLXN_2), 
                                                         .O_1(XLXN_4), 
                                                         .O_2(XLXN_6), 
                                                         .O_3(XLXN_8), 
                                                         .O_4(XLXN_10), 
                                                         .O_5(XLXN_11), 
                                                         .O_6(XLXN_14), 
                                                         .O_7(XLXN_12), 
                                                         .O_8(XLXN_13));
   (* HU_SET = "XLXI_5_0" *) 
   AND9_MXILINX_USART_Trans_Bus  XLXI_5 (.I0(TICK0), 
                                        .I1(XLXN_58), 
                                        .I2(XLXN_57), 
                                        .I3(TICK3), 
                                        .I4(TICK4), 
                                        .I5(XLXN_42), 
                                        .I6(TICK6), 
                                        .I7(TICK7), 
                                        .I8(XLXN_39), 
                                        .O(RST));
   INV  XLXI_6 (.I(TICK8), 
               .O(XLXN_39));
   INV  XLXI_13 (.I(TICK5), 
                .O(XLXN_42));
   (* HU_SET = "XLXI_14_1" *) 
   FTC_MXILINX_USART_Trans_Bus #( .INIT(1'b0) ) XLXI_14 (.C(RST), 
                                        .CLR(XLXN_48), 
                                        .T(XLXN_46), 
                                        .Q(CLK_O));
   VCC  XLXI_15 (.P(XLXN_46));
   GND  XLXI_17 (.G(XLXN_48));
   VCC  XLXI_18 (.P(XLXN_52));
   GND  XLXI_19 (.G(XLXN_53));
   INV  XLXI_20 (.I(TICK1), 
                .O(XLXN_58));
   INV  XLXI_21 (.I(TICK2), 
                .O(XLXN_57));
endmodule
`timescale 1ns / 1ps

module bit_11_MUSER_USART_Trans_Bus(CLK, 
                                    I_0, 
                                    I_1, 
                                    I_2, 
                                    I_3, 
                                    I_4, 
                                    I_5, 
                                    I_6, 
                                    I_7, 
                                    Parity, 
                                    S, 
                                    Start_0, 
                                    Start_1, 
                                    Stop, 
                                    Serial_output);

    input CLK;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input Parity;
    input S;
    input Start_0;
    input Start_1;
    input Stop;
   output Serial_output;
   
   wire XLXN_70;
   wire XLXN_72;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_83;
   wire XLXN_85;
   wire XLXN_86;
   wire XLXN_87;
   wire XLXN_89;
   wire XLXN_91;
   wire XLXN_92;
   wire XLXN_94;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_98;
   wire XLXN_99;
   wire XLXN_101;
   wire XLXN_103;
   wire XLXN_109;
   wire XLXN_120;
   wire XLXN_137;
   wire XLXN_153;
   
   MUXCY  XLXI_28 (.CI(XLXN_70), 
                  .DI(I_7), 
                  .S(S), 
                  .O(XLXN_80));
   MUXCY  XLXI_30 (.CI(XLXN_72), 
                  .DI(I_6), 
                  .S(S), 
                  .O(XLXN_86));
   MUXCY  XLXI_34 (.CI(XLXN_81), 
                  .DI(I_5), 
                  .S(S), 
                  .O(XLXN_85));
   MUXCY  XLXI_36 (.CI(XLXN_83), 
                  .DI(I_4), 
                  .S(S), 
                  .O(XLXN_98));
   MUXCY  XLXI_38 (.CI(XLXN_87), 
                  .DI(I_3), 
                  .S(S), 
                  .O(XLXN_91));
   MUXCY  XLXI_40 (.CI(XLXN_89), 
                  .DI(I_2), 
                  .S(S), 
                  .O(XLXN_97));
   MUXCY  XLXI_42 (.CI(XLXN_92), 
                  .DI(I_1), 
                  .S(S), 
                  .O(XLXN_96));
   MUXCY  XLXI_44 (.CI(XLXN_94), 
                  .DI(I_0), 
                  .S(S), 
                  .O(XLXN_120));
   MUXCY  XLXI_46 (.CI(XLXN_99), 
                  .DI(Start_0), 
                  .S(S), 
                  .O(XLXN_103));
   MUXCY  XLXI_48 (.CI(XLXN_101), 
                  .DI(Start_1), 
                  .S(S), 
                  .O(XLXN_109));
   FD #( .INIT(1'b0) ) XLXI_60 (.C(CLK), 
               .D(XLXN_137), 
               .Q(XLXN_70));
   FD #( .INIT(1'b0) ) XLXI_61 (.C(CLK), 
               .D(XLXN_80), 
               .Q(XLXN_72));
   FD #( .INIT(1'b0) ) XLXI_62 (.C(CLK), 
               .D(XLXN_86), 
               .Q(XLXN_81));
   FD #( .INIT(1'b0) ) XLXI_63 (.C(CLK), 
               .D(XLXN_85), 
               .Q(XLXN_83));
   FD #( .INIT(1'b0) ) XLXI_64 (.C(CLK), 
               .D(XLXN_98), 
               .Q(XLXN_87));
   FD #( .INIT(1'b0) ) XLXI_65 (.C(CLK), 
               .D(XLXN_91), 
               .Q(XLXN_89));
   FD #( .INIT(1'b0) ) XLXI_66 (.C(CLK), 
               .D(XLXN_97), 
               .Q(XLXN_92));
   FD #( .INIT(1'b0) ) XLXI_67 (.C(CLK), 
               .D(XLXN_96), 
               .Q(XLXN_94));
   FD #( .INIT(1'b0) ) XLXI_68 (.C(CLK), 
               .D(XLXN_120), 
               .Q(XLXN_99));
   FD #( .INIT(1'b0) ) XLXI_69 (.C(CLK), 
               .D(XLXN_103), 
               .Q(XLXN_101));
   FD #( .INIT(1'b0) ) XLXI_70 (.C(CLK), 
               .D(XLXN_109), 
               .Q(Serial_output));
   FD #( .INIT(1'b0) ) XLXI_71 (.C(CLK), 
               .D(Stop), 
               .Q(XLXN_153));
   MUXCY  XLXI_72 (.CI(XLXN_153), 
                  .DI(Parity), 
                  .S(S), 
                  .O(XLXN_137));
endmodule
`timescale 1ns / 1ps

module Reg_4bit_MUSER_USART_Trans_Bus(CE, 
                                      CLEAR, 
                                      CLOCK, 
                                      I_0, 
                                      I_1, 
                                      I_2, 
                                      I_3, 
                                      O_0, 
                                      O_1, 
                                      O_2, 
                                      O_3);

    input CE;
    input CLEAR;
    input CLOCK;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_11 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_0), 
                 .Q(O_0));
endmodule
`timescale 1ns / 1ps

module Add_sub_4bit_MUSER_USART_Trans_Bus(add_0, 
                                          I_0, 
                                          I_1, 
                                          I_2, 
                                          I_3, 
                                          O_0, 
                                          O_1, 
                                          O_2, 
                                          O_3);

    input add_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_52;
   wire XLXN_55;
   wire XLXN_57;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(I_3), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(I_2), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(I_1), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_63));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(I_0), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_64));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_66));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_65));
   AND2  XLXI_34 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_57));
   AND2  XLXI_35 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_55));
   XOR2  XLXI_38 (.I0(add_0), 
                 .I1(XLXN_63), 
                 .O(O_0));
   XOR2  XLXI_39 (.I0(add_0), 
                 .I1(XLXN_64), 
                 .O(O_1));
   XOR2  XLXI_40 (.I0(add_0), 
                 .I1(XLXN_65), 
                 .O(O_2));
   XOR2  XLXI_41 (.I0(add_0), 
                 .I1(XLXN_66), 
                 .O(O_3));
endmodule
`timescale 1ns / 1ps

module decade_counter_MUSER_USART_Trans_Bus(CLEAR, 
                                            CLK, 
                                            OUT_f);

    input CLEAR;
    input CLK;
   output OUT_f;
   
   wire OUT_1;
   wire XLXN_1;
   wire XLXN_11;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_76;
   wire OUT_f_DUMMY;
   
   assign OUT_f = OUT_f_DUMMY;
   Add_sub_4bit_MUSER_USART_Trans_Bus  XLXI_1 (.add_0(XLXN_1), 
                                              .I_0(OUT_1), 
                                              .I_1(XLXN_48), 
                                              .I_2(XLXN_49), 
                                              .I_3(XLXN_11), 
                                              .O_0(XLXN_43), 
                                              .O_1(XLXN_44), 
                                              .O_2(XLXN_45), 
                                              .O_3(XLXN_47));
   GND  XLXI_3 (.G(XLXN_1));
   NAND4  XLXI_8 (.I0(XLXN_18), 
                 .I1(XLXN_48), 
                 .I2(XLXN_17), 
                 .I3(XLXN_11), 
                 .O(OUT_f_DUMMY));
   INV  XLXI_10 (.I(OUT_1), 
                .O(XLXN_18));
   INV  XLXI_12 (.I(XLXN_49), 
                .O(XLXN_17));
   OR2  XLXI_20 (.I0(OUT_f_DUMMY), 
                .I1(CLEAR), 
                .O(XLXN_76));
   Reg_4bit_MUSER_USART_Trans_Bus  XLXI_22 (.CE(XLXN_76), 
                                           .CLEAR(CLEAR), 
                                           .CLOCK(CLK), 
                                           .I_0(XLXN_43), 
                                           .I_1(XLXN_44), 
                                           .I_2(XLXN_45), 
                                           .I_3(XLXN_47), 
                                           .O_0(OUT_1), 
                                           .O_1(XLXN_48), 
                                           .O_2(XLXN_49), 
                                           .O_3(XLXN_11));
endmodule
`timescale 1ns / 1ps

module Parity_gen_MUSER_USART_Trans_Bus(I_0, 
                                        I_1, 
                                        I_2, 
                                        I_3, 
                                        I_4, 
                                        I_5, 
                                        I_6, 
                                        I_7, 
                                        PARITY);

    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
   output PARITY;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_10;
   
   XOR2  XLXI_1 (.I0(I_1), 
                .I1(I_0), 
                .O(XLXN_1));
   XOR2  XLXI_2 (.I0(I_3), 
                .I1(I_2), 
                .O(XLXN_7));
   XOR2  XLXI_3 (.I0(I_5), 
                .I1(I_4), 
                .O(XLXN_3));
   XOR2  XLXI_4 (.I0(I_7), 
                .I1(I_6), 
                .O(XLXN_6));
   XOR2  XLXI_5 (.I0(XLXN_7), 
                .I1(XLXN_1), 
                .O(XLXN_4));
   XOR2  XLXI_7 (.I0(XLXN_6), 
                .I1(XLXN_3), 
                .O(XLXN_10));
   XOR2  XLXI_8 (.I0(XLXN_10), 
                .I1(XLXN_4), 
                .O(PARITY));
endmodule
`timescale 1ns / 1ps

module combine_shiftreg_dec_MUSER_USART_Trans_Bus(CLK_Sync, 
                                                  CLR, 
                                                  I_1, 
                                                  I_2, 
                                                  I_3, 
                                                  I_4, 
                                                  I_5, 
                                                  I_6, 
                                                  I_7, 
                                                  I_00, 
                                                  OUT_ser);

    input CLK_Sync;
    input CLR;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input I_00;
   output OUT_ser;
   
   wire write;
   wire XLXN_42;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_52;
   
   GND  XLXI_8 (.G(XLXN_46));
   Parity_gen_MUSER_USART_Trans_Bus  XLXI_9 (.I_0(I_00), 
                                            .I_1(I_1), 
                                            .I_2(I_2), 
                                            .I_3(I_3), 
                                            .I_4(I_4), 
                                            .I_5(I_5), 
                                            .I_6(I_6), 
                                            .I_7(I_7), 
                                            .PARITY(XLXN_42));
   decade_counter_MUSER_USART_Trans_Bus  XLXI_19 (.CLEAR(CLR), 
                                                 .CLK(XLXN_52), 
                                                 .OUT_f(write));
   bit_11_MUSER_USART_Trans_Bus  XLXI_20 (.CLK(XLXN_52), 
                                         .I_0(I_00), 
                                         .I_1(I_1), 
                                         .I_2(I_2), 
                                         .I_3(I_3), 
                                         .I_4(I_4), 
                                         .I_5(I_5), 
                                         .I_6(I_6), 
                                         .I_7(I_7), 
                                         .Parity(XLXN_42), 
                                         .S(write), 
                                         .Start_0(XLXN_46), 
                                         .Start_1(XLXN_47), 
                                         .Stop(XLXN_48), 
                                         .Serial_output(OUT_ser));
   VCC  XLXI_22 (.P(XLXN_47));
   VCC  XLXI_23 (.P(XLXN_48));
   Precale_434_MUSER_USART_Trans_Bus  XLXI_25 (.CLK(CLK_Sync), 
                                              .CLK_O(XLXN_52));
endmodule
`timescale 1ns / 1ps

module USART_Trans_Bus(CLK, 
                       CLR, 
                       Inp, 
                       Ser_Out);

    input CLK;
    input CLR;
    input [7:0] Inp;
   output Ser_Out;
   
   
   combine_shiftreg_dec_MUSER_USART_Trans_Bus  XLXI_1 (.CLK_Sync(CLK), 
                                                      .CLR(CLR), 
                                                      .I_1(Inp[1]), 
                                                      .I_2(Inp[2]), 
                                                      .I_3(Inp[3]), 
                                                      .I_4(Inp[4]), 
                                                      .I_5(Inp[5]), 
                                                      .I_6(Inp[6]), 
                                                      .I_7(Inp[7]), 
                                                      .I_00(Inp[0]), 
                                                      .OUT_ser(Ser_Out));
endmodule
