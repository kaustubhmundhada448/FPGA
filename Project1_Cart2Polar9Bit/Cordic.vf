////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : Cordic.vf
// /___/   /\     Timestamp : 04/17/2016 18:57:45
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog "E:/Acads/6th Sem/vlsilab/Xillinx/Final Submission/Project1_Cart2Polar9Bit/Cordic.vf" -w "E:/Acads/6th Sem/vlsilab/Xillinx/Final Submission/Project1_Cart2Polar9Bit/Cordic.sch"
//Design Name: Cordic
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FD8CE_MXILINX_Cordic(C, 
                            CE, 
                            CLR, 
                            D, 
                            Q);

    input C;
    input CE;
    input CLR;
    input [7:0] D;
   output [7:0] Q;
   
   
   FDCE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[0]), 
              .Q(Q[0]));
   FDCE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[1]), 
              .Q(Q[1]));
   FDCE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[2]), 
              .Q(Q[2]));
   FDCE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[3]), 
              .Q(Q[3]));
   FDCE #( .INIT(1'b0) ) I_Q4 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[4]), 
              .Q(Q[4]));
   FDCE #( .INIT(1'b0) ) I_Q5 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[5]), 
              .Q(Q[5]));
   FDCE #( .INIT(1'b0) ) I_Q6 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[6]), 
              .Q(Q[6]));
   FDCE #( .INIT(1'b0) ) I_Q7 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[7]), 
              .Q(Q[7]));
endmodule
`timescale 1ns / 1ps

module FD9CE_MUSER_Cordic(C, 
                          CE, 
                          CLR, 
                          D, 
                          Q);

    input C;
    input CE;
    input CLR;
    input [8:0] D;
   output [8:0] Q;
   
   
   FDCE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[0]), 
              .Q(Q[0]));
   FDCE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[1]), 
              .Q(Q[1]));
   FDCE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[2]), 
              .Q(Q[2]));
   FDCE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[3]), 
              .Q(Q[3]));
   FDCE #( .INIT(1'b0) ) I_Q4 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[4]), 
              .Q(Q[4]));
   FDCE #( .INIT(1'b0) ) I_Q5 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[5]), 
              .Q(Q[5]));
   FDCE #( .INIT(1'b0) ) I_Q6 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[6]), 
              .Q(Q[6]));
   FDCE #( .INIT(1'b0) ) I_Q7 (.C(C), 
              .CE(CE), 
              .CLR(CLR), 
              .D(D[7]), 
              .Q(Q[7]));
   FDCE #( .INIT(1'b0) ) XLXI_9 (.C(C), 
                .CE(CE), 
                .CLR(CLR), 
                .D(D[8]), 
                .Q(Q[8]));
endmodule
`timescale 1ns / 1ps

module Mux_2_9_MUSER_Cordic(Inp0, 
                            Inp1, 
                            Sel, 
                            Outp);

    input [8:0] Inp0;
    input [8:0] Inp1;
    input Sel;
   output [8:0] Outp;
   
   
   MUXCY  XLXI_18 (.CI(Inp1[1]), 
                  .DI(Inp0[1]), 
                  .S(Sel), 
                  .O(Outp[1]));
   MUXCY  XLXI_19 (.CI(Inp1[0]), 
                  .DI(Inp0[0]), 
                  .S(Sel), 
                  .O(Outp[0]));
   MUXCY  XLXI_20 (.CI(Inp1[2]), 
                  .DI(Inp0[2]), 
                  .S(Sel), 
                  .O(Outp[2]));
   MUXCY  XLXI_21 (.CI(Inp1[3]), 
                  .DI(Inp0[3]), 
                  .S(Sel), 
                  .O(Outp[3]));
   MUXCY  XLXI_24 (.CI(Inp1[4]), 
                  .DI(Inp0[4]), 
                  .S(Sel), 
                  .O(Outp[4]));
   MUXCY  XLXI_25 (.CI(Inp1[5]), 
                  .DI(Inp0[5]), 
                  .S(Sel), 
                  .O(Outp[5]));
   MUXCY  XLXI_26 (.CI(Inp1[6]), 
                  .DI(Inp0[6]), 
                  .S(Sel), 
                  .O(Outp[6]));
   MUXCY  XLXI_27 (.CI(Inp1[7]), 
                  .DI(Inp0[7]), 
                  .S(Sel), 
                  .O(Outp[7]));
   MUXCY  XLXI_36 (.CI(Inp1[8]), 
                  .DI(Inp0[8]), 
                  .S(Sel), 
                  .O(Outp[8]));
endmodule
`timescale 1ns / 1ps

module Mux_2_8_MUSER_Cordic(Inp0, 
                            Inp1, 
                            Sel, 
                            Outp);

    input [7:0] Inp0;
    input [7:0] Inp1;
    input Sel;
   output [7:0] Outp;
   
   
   MUXCY  XLXI_18 (.CI(Inp1[1]), 
                  .DI(Inp0[1]), 
                  .S(Sel), 
                  .O(Outp[1]));
   MUXCY  XLXI_19 (.CI(Inp1[0]), 
                  .DI(Inp0[0]), 
                  .S(Sel), 
                  .O(Outp[0]));
   MUXCY  XLXI_20 (.CI(Inp1[2]), 
                  .DI(Inp0[2]), 
                  .S(Sel), 
                  .O(Outp[2]));
   MUXCY  XLXI_21 (.CI(Inp1[3]), 
                  .DI(Inp0[3]), 
                  .S(Sel), 
                  .O(Outp[3]));
   MUXCY  XLXI_24 (.CI(Inp1[4]), 
                  .DI(Inp0[4]), 
                  .S(Sel), 
                  .O(Outp[4]));
   MUXCY  XLXI_25 (.CI(Inp1[5]), 
                  .DI(Inp0[5]), 
                  .S(Sel), 
                  .O(Outp[5]));
   MUXCY  XLXI_26 (.CI(Inp1[6]), 
                  .DI(Inp0[6]), 
                  .S(Sel), 
                  .O(Outp[6]));
   MUXCY  XLXI_27 (.CI(Inp1[7]), 
                  .DI(Inp0[7]), 
                  .S(Sel), 
                  .O(Outp[7]));
endmodule
`timescale 1ns / 1ps

module ADSU8_MXILINX_Cordic(A, 
                            ADD, 
                            B, 
                            CI, 
                            CO, 
                            OFL, 
                            S);

    input [7:0] A;
    input ADD;
    input [7:0] B;
    input CI;
   output CO;
   output OFL;
   output [7:0] S;
   
   wire C0;
   wire C1;
   wire C2;
   wire C3;
   wire C4;
   wire C5;
   wire C6;
   wire C6O;
   wire dummy;
   wire I0;
   wire I1;
   wire I2;
   wire I3;
   wire I4;
   wire I5;
   wire I6;
   wire I7;
   wire SUB0;
   wire SUB1;
   wire SUB2;
   wire SUB3;
   wire SUB4;
   wire SUB5;
   wire SUB6;
   wire SUB7;
   wire CO_DUMMY;
   
   assign CO = CO_DUMMY;
   (* RLOC = "X1Y0" *) 
   FMAP  I_36_16 (.I1(A[0]), 
                 .I2(B[0]), 
                 .I3(ADD), 
                 .I4(dummy), 
                 .O(I0));
   (* RLOC = "X1Y0" *) 
   FMAP  I_36_17 (.I1(A[1]), 
                 .I2(B[1]), 
                 .I3(ADD), 
                 .I4(dummy), 
                 .O(I1));
   (* RLOC = "X1Y1" *) 
   FMAP  I_36_18 (.I1(A[2]), 
                 .I2(B[2]), 
                 .I3(ADD), 
                 .I4(dummy), 
                 .O(I2));
   (* RLOC = "X1Y1" *) 
   FMAP  I_36_19 (.I1(A[3]), 
                 .I2(B[3]), 
                 .I3(ADD), 
                 .I4(dummy), 
                 .O(I3));
   (* RLOC = "X1Y2" *) 
   FMAP  I_36_20 (.I1(A[4]), 
                 .I2(B[4]), 
                 .I3(ADD), 
                 .I4(dummy), 
                 .O(I4));
   (* RLOC = "X1Y2" *) 
   FMAP  I_36_21 (.I1(A[5]), 
                 .I2(B[5]), 
                 .I3(ADD), 
                 .I4(dummy), 
                 .O(I5));
   (* RLOC = "X1Y3" *) 
   FMAP  I_36_22 (.I1(A[6]), 
                 .I2(B[6]), 
                 .I3(ADD), 
                 .I4(dummy), 
                 .O(I6));
   (* RLOC = "X1Y3" *) 
   FMAP  I_36_23 (.I1(A[7]), 
                 .I2(B[7]), 
                 .I3(ADD), 
                 .I4(dummy), 
                 .O(I7));
   XOR3  I_36_50 (.I0(A[0]), 
                 .I1(B[0]), 
                 .I2(SUB0), 
                 .O(I0));
   (* RLOC = "X1Y0" *) 
   MUXCY_L  I_36_55 (.CI(C0), 
                    .DI(A[1]), 
                    .S(I1), 
                    .LO(C1));
   XOR3  I_36_56 (.I0(A[2]), 
                 .I1(B[2]), 
                 .I2(SUB2), 
                 .O(I2));
   XOR3  I_36_57 (.I0(A[3]), 
                 .I1(B[3]), 
                 .I2(SUB3), 
                 .O(I3));
   (* RLOC = "X1Y1" *) 
   MUXCY_L  I_36_58 (.CI(C2), 
                    .DI(A[3]), 
                    .S(I3), 
                    .LO(C3));
   XOR3  I_36_59 (.I0(A[6]), 
                 .I1(B[6]), 
                 .I2(SUB6), 
                 .O(I6));
   XOR3  I_36_60 (.I0(A[4]), 
                 .I1(B[4]), 
                 .I2(SUB4), 
                 .O(I4));
   (* RLOC = "X1Y1" *) 
   MUXCY_L  I_36_62 (.CI(C1), 
                    .DI(A[2]), 
                    .S(I2), 
                    .LO(C2));
   (* RLOC = "X1Y2" *) 
   MUXCY_L  I_36_63 (.CI(C3), 
                    .DI(A[4]), 
                    .S(I4), 
                    .LO(C4));
   (* RLOC = "X1Y3" *) 
   MUXCY  I_36_64 (.CI(C6), 
                  .DI(A[7]), 
                  .S(I7), 
                  .O(CO_DUMMY));
   XORCY  I_36_73 (.CI(CI), 
                  .LI(I0), 
                  .O(S[0]));
   XORCY  I_36_74 (.CI(C0), 
                  .LI(I1), 
                  .O(S[1]));
   XORCY  I_36_75 (.CI(C2), 
                  .LI(I3), 
                  .O(S[3]));
   XORCY  I_36_76 (.CI(C1), 
                  .LI(I2), 
                  .O(S[2]));
   XORCY  I_36_77 (.CI(C4), 
                  .LI(I5), 
                  .O(S[5]));
   XORCY  I_36_78 (.CI(C3), 
                  .LI(I4), 
                  .O(S[4]));
   XOR3  I_36_79 (.I0(A[7]), 
                 .I1(B[7]), 
                 .I2(SUB7), 
                 .O(I7));
   XORCY  I_36_80 (.CI(C6), 
                  .LI(I7), 
                  .O(S[7]));
   XORCY  I_36_81 (.CI(C5), 
                  .LI(I6), 
                  .O(S[6]));
   XOR3  I_36_100 (.I0(A[1]), 
                  .I1(B[1]), 
                  .I2(SUB1), 
                  .O(I1));
   (* RLOC = "X1Y3" *) 
   MUXCY_D  I_36_107 (.CI(C5), 
                     .DI(A[6]), 
                     .S(I6), 
                     .LO(C6), 
                     .O(C6O));
   XOR3  I_36_109 (.I0(A[5]), 
                  .I1(B[5]), 
                  .I2(SUB5), 
                  .O(I5));
   (* RLOC = "X1Y2" *) 
   MUXCY_L  I_36_110 (.CI(C4), 
                     .DI(A[5]), 
                     .S(I5), 
                     .LO(C5));
   (* RLOC = "X1Y0" *) 
   MUXCY_L  I_36_111 (.CI(CI), 
                     .DI(A[0]), 
                     .S(I0), 
                     .LO(C0));
   INV  I_36_112 (.I(ADD), 
                 .O(SUB0));
   XOR2  I_36_221 (.I0(C6O), 
                  .I1(CO_DUMMY), 
                  .O(OFL));
   INV  I_36_222 (.I(ADD), 
                 .O(SUB1));
   INV  I_36_223 (.I(ADD), 
                 .O(SUB2));
   INV  I_36_224 (.I(ADD), 
                 .O(SUB3));
   INV  I_36_225 (.I(ADD), 
                 .O(SUB4));
   INV  I_36_226 (.I(ADD), 
                 .O(SUB5));
   INV  I_36_227 (.I(ADD), 
                 .O(SUB6));
   INV  I_36_228 (.I(ADD), 
                 .O(SUB7));
endmodule
`timescale 1ns / 1ps

module Cordic(CLK, 
              Count, 
              Delta_B, 
              Enable, 
              Input, 
              Start, 
              Thetai, 
              x, 
              y, 
              Theta_pre, 
              XOtp, 
              YOtp);

    input CLK;
    input [3:0] Count;
    input Delta_B;
    input Enable;
    input [7:0] Input;
    input Start;
    input [7:0] Thetai;
    input [8:0] x;
    input [8:0] y;
   output [7:0] Theta_pre;
   output [8:0] XOtp;
   output [8:0] YOtp;
   
   wire Delta;
   wire Delta_bar;
   wire G1;
   wire [8:0] XLXN_79;
   wire [8:0] XLXN_106;
   wire [7:0] XLXN_176;
   wire [7:0] XLXN_180;
   wire [8:0] XLXN_191;
   wire [8:0] XLXN_197;
   wire [8:0] XOtpF;
   wire [8:0] YOtpF;
   wire [8:0] XOtp_DUMMY;
   wire [7:0] Theta_pre_DUMMY;
   wire [8:0] YOtp_DUMMY;
   
   assign Theta_pre[7:0] = Theta_pre_DUMMY[7:0];
   assign XOtp[8:0] = XOtp_DUMMY[8:0];
   assign YOtp[8:0] = YOtp_DUMMY[8:0];
   (* HU_SET = "XLXI_4_13" *) 
   ADSU8_MXILINX_Cordic  XLXI_4 (.A(Theta_pre_DUMMY[7:0]), 
                                .ADD(Delta_bar), 
                                .B(Thetai[7:0]), 
                                .CI(Delta), 
                                .CO(), 
                                .OFL(), 
                                .S(XLXN_176[7:0]));
   INV  XLXI_5 (.I(Delta_B), 
               .O(Delta));
   GND  XLXI_31 (.G(G1));
   BUF  XLXI_33 (.I(Delta_B), 
                .O(Delta_bar));
   Mux_2_8_MUSER_Cordic  XLXI_54 (.Inp0(XLXN_176[7:0]), 
                                 .Inp1(Input[7:0]), 
                                 .Sel(Start), 
                                 .Outp(XLXN_180[7:0]));
   RShift_I_9  XLXI_65 (.I(Count[3:0]), 
                       .Inpt(YOtp_DUMMY[8:0]), 
                       .Otps(XLXN_106[8:0]));
   RShift_I_9  XLXI_66 (.I(Count[3:0]), 
                       .Inpt(XOtp_DUMMY[8:0]), 
                       .Otps(XLXN_79[8:0]));
   Mux_2_9_MUSER_Cordic  XLXI_73 (.Inp0(XOtpF[8:0]), 
                                 .Inp1(x[8:0]), 
                                 .Sel(Start), 
                                 .Outp(XLXN_197[8:0]));
   Mux_2_9_MUSER_Cordic  XLXI_74 (.Inp0(YOtpF[8:0]), 
                                 .Inp1(y[8:0]), 
                                 .Sel(Start), 
                                 .Outp(XLXN_191[8:0]));
   FD9CE_MUSER_Cordic  XLXI_75 (.C(CLK), 
                               .CE(Enable), 
                               .CLR(G1), 
                               .D(XLXN_191[8:0]), 
                               .Q(YOtp_DUMMY[8:0]));
   FD9CE_MUSER_Cordic  XLXI_76 (.C(CLK), 
                               .CE(Enable), 
                               .CLR(G1), 
                               .D(XLXN_197[8:0]), 
                               .Q(XOtp_DUMMY[8:0]));
   (* HU_SET = "XLXI_84_14" *) 
   FD8CE_MXILINX_Cordic  XLXI_84 (.C(CLK), 
                                 .CE(Enable), 
                                 .CLR(Start), 
                                 .D(XLXN_180[7:0]), 
                                 .Q(Theta_pre_DUMMY[7:0]));
   ADSU9_V  XLXI_85 (.A(XOtp_DUMMY[8:0]), 
                    .ADD(Delta_bar), 
                    .B(XLXN_106[8:0]), 
                    .CI(Delta), 
                    .S(XOtpF[8:0]));
   ADSU9_V  XLXI_86 (.A(YOtp_DUMMY[8:0]), 
                    .ADD(Delta), 
                    .B(XLXN_79[8:0]), 
                    .CI(Delta_bar), 
                    .S(YOtpF[8:0]));
endmodule
